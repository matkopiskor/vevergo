{"version":3,"sources":["components/input/Input.tsx","components/select/Select.tsx","components/page-title/PageTitle.tsx","components/profile-form/FormCol.tsx","components/profile-form/FormCol2.tsx","components/profile-info-item/ProfileInfoItem.tsx","custom-tabs/CustomTabs.tsx","components/image/Image.tsx","components/avatar-dropzone/AvatarDropzone.tsx","components/card/Card.tsx","components/basic-org-info/BasicOrgInfo.tsx","components/organization-form/AccountData.tsx","components/organization-form/LinkedAccounts.tsx","components/organization-form/OrganizationData.tsx","components/organization-form/SecurityPrivacy.tsx","components/organization-form/OrganizationForm.tsx","components/organization/Organization.tsx","pages/organization-profile/OrganizationProfile.tsx"],"names":["Input","props","label","onChange","value","placeholder","type","name","labelClassName","inputClassName","Prefix","disabled","infoText","required","className","title","InfoCircleOutlined","prefix","Option","AntSelect","Select","options","mode","removeClear","allowClear","map","PageTitle","FormCol","children","xl","lg","sm","xs","FormCol2","ProfileInfoItem","CustomTabs","tabs","panes","onTabClick","activeKey","panesArr","Array","from","pane","cn","key","onClick","e","tab","Image","src","alt","AvatarDropzone","currentImage","onSaveImage","useTranslation","t","useState","editor","setEditor","editing","setEditing","image","setImage","setEditorRef","useCallback","edit","onDrop","acceptedFiles","saveImage","preventDefault","stopPropagation","binImage","dataURI","BASE64_MARKER","base64Index","indexOf","length","base64","substring","raw","window","atob","rawLength","array","Uint8Array","ArrayBuffer","i","charCodeAt","convertDataURIToBinary","getImage","toDataURL","store","dispatch","addToLoading","cancelEditing","undefined","useEffect","removeFromLoading","noKeyboard","getRootProps","getInputProps","ref","border","width","height","size","Card","BasicOrgInfo","nickname","profile_image","country_name","city","create_date_formatted","privacyData","phone_number","mobile_number","fax_number","website","useAppDispatch","goTo","useAppHistory","imageUrl","ImgJpg","orgLocation","country","placeLink","arr","push","join","url","buildLocation","memberSince","buildMemberSince","phone","mob","land","buildPhone","backToPersonal","removeActive","onSaveAvatar","data","a","uploadOrgImage","resp","error_id","notify","description","ERROR_CODES","fetchOrgs","name_public","address_public","href","target","rel","phone_public","website_public","Item","Form","AccountData","hasRights","countryOptions","useAppSelector","state","countries","list","id","toString","gutter","LinkedAccounts","users","removeUser","responsive","bordered","item","first_name","last_name","colSpan","OrganizationData","SecurityPrivacy","span","valuePropName","TabPane","Tabs","OrganizationForm","org","userId","useForm","form","initVals","setInitValues","owner_nickname","organization_type_name","taxable","vat_id","address","address_2","post_code","email","contact_notifications","email_public","expired_items_notifications","onFinish","values","isFieldsTouched","accountData","organization_id","parseInt","privacyValues","updateOrganization","updatePrivacyOrg","console","error","initialValues","defaultActiveKey","renderTabBar","owner","Organization","orgs","organizations","mems","membership","active","privacy","user","setUsers","fetchData","getOrganizationUsers","items","deleteOrganizationUser","find","OrganizationProfile"],"mappings":"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","file":"static/js/8.e6b87363.chunk.js","sourcesContent":["import { ChangeEventHandler, FC } from 'react';\r\nimport { Input as AntInput, Tooltip } from 'antd';\r\n\r\nimport './Input.css';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n    label?: string;\r\n    onChange?: ChangeEventHandler<HTMLInputElement>;\r\n    value?: string | number | undefined;\r\n    placeholder?: string;\r\n    type?: string;\r\n    name?: string;\r\n    labelClassName?: string;\r\n    inputClassName?: string;\r\n    Prefix?: JSX.Element;\r\n    disabled?: boolean;\r\n    infoText?: string;\r\n    required?: boolean;\r\n}\r\n\r\nexport const Input: FC<Props> = (props) => {\r\n    const {\r\n        label,\r\n        onChange,\r\n        value,\r\n        placeholder,\r\n        type = 'text',\r\n        name,\r\n        labelClassName = '',\r\n        inputClassName = '',\r\n        Prefix,\r\n        disabled,\r\n        infoText,\r\n        required,\r\n    } = props;\r\n    return (\r\n        <div className=\"input__wrapper\">\r\n            <div className=\"info-text-wrapper\">\r\n                <div>\r\n                    <label className={`input__label ${labelClassName}`}>{label}</label>\r\n                    {required && <span className=\"input__label-required\">*</span>}\r\n                </div>\r\n                {infoText && (\r\n                    <Tooltip title={infoText}>\r\n                        <InfoCircleOutlined />\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n\r\n            <AntInput\r\n                type={type}\r\n                className={`input__select ${inputClassName}`}\r\n                onChange={onChange}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                prefix={Prefix}\r\n                disabled={disabled}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport { Select as AntSelect, Tooltip } from 'antd';\r\nimport { SelectValue } from 'antd/lib/select';\r\n\r\nimport './Select.css';\r\nimport { Option as OptionModel } from '../../models/Option';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = AntSelect;\r\n\r\ninterface Props {\r\n    options: OptionModel[];\r\n    onChange?: (value: SelectValue) => void;\r\n    value?: SelectValue;\r\n    placeholder?: string;\r\n    label?: string;\r\n    mode?: 'multiple' | 'tags';\r\n    disabled?: boolean;\r\n    infoText?: string;\r\n    removeClear?: boolean;\r\n}\r\n\r\nexport const Select: FC<Props> = ({\r\n    options,\r\n    onChange,\r\n    value,\r\n    placeholder,\r\n    label,\r\n    mode,\r\n    disabled,\r\n    infoText,\r\n    removeClear,\r\n}) => {\r\n    return (\r\n        <div className=\"single-select__wrapper\">\r\n            <div className=\"info-text-wrapper\">\r\n                <label className=\"single-select__label\">{label}</label>\r\n                {infoText && (\r\n                    <Tooltip title={infoText}>\r\n                        <InfoCircleOutlined />\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n            <AntSelect\r\n                className=\"single-select__select\"\r\n                onChange={onChange}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                allowClear={!removeClear}\r\n                mode={mode}\r\n                disabled={disabled}\r\n            >\r\n                {options.map(({ label, value }) => {\r\n                    return (\r\n                        <Option key={value} value={value}>\r\n                            {label}\r\n                        </Option>\r\n                    );\r\n                })}\r\n            </AntSelect>\r\n        </div>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\n\r\nimport './PageTitle.css';\r\n\r\ninterface IProps {\r\n    title: string;\r\n}\r\n\r\nexport const PageTitle: FC<IProps> = ({ title }) => {\r\n    return <h3 className='page-title'>{title}</h3>;\r\n};\r\n","import { Col } from 'antd';\r\nimport { FC } from 'react';\r\n\r\nexport const FormCol: FC = ({ children }) => {\r\n    return (\r\n        <Col xl={12} lg={12} sm={24} xs={24}>\r\n            {children}\r\n        </Col>\r\n    );\r\n};\r\n","import { Col } from 'antd';\r\nimport { FC } from 'react';\r\n\r\nexport const FormCol2: FC = ({ children }) => {\r\n    return (\r\n        <Col xl={8} lg={8} sm={12} xs={24}>\r\n            {children}\r\n        </Col>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport './ProfileInfoItem.css';\r\n\r\nexport const ProfileInfoItem: FC = ({ children }) => {\r\n    return <div className=\"profile-info-item\">{children}</div>;\r\n};\r\n","import { FC } from 'react';\r\nimport './style.css';\r\n\r\ninterface IProps {\r\n    tabs: any;\r\n}\r\n\r\nexport const CustomTabs: FC<IProps> = ({ tabs }) => {\r\n    const { panes, onTabClick, activeKey } = tabs;\r\n    const panesArr = Array.from((panes as any) ?? {});\r\n    return (\r\n        <div className=\"tabs-list-container\">\r\n            <div className=\"tabs-list-wrapper\">\r\n                <div className=\"tabs-list\">\r\n                    {panesArr.map((pane: any) => {\r\n                        let cn = 'tabs-item';\r\n                        if (pane.key === activeKey) {\r\n                            cn = cn + ' tabs-item-active';\r\n                        }\r\n                        return (\r\n                            <div className={cn} key={pane.key} onClick={(e) => onTabClick(pane.key, e)}>\r\n                                {pane?.props?.tab}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport './Image.css';\r\n\r\ninterface IProps {\r\n    src: string;\r\n}\r\nexport const Image: FC<IProps> = ({ src }) => {\r\n    return (\r\n        <div className=\"single-image\">\r\n            <img src={src} alt=\"single\" />\r\n        </div>\r\n    );\r\n};\r\n","import { FC, useCallback, useEffect, useState } from 'react';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Camera, X } from 'react-feather';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { addToLoading, removeFromLoading } from '../../redux/reducers/loadingReducer';\r\nimport { store } from '../../redux/store';\r\nimport { Image } from '../image';\r\n\r\nimport './style.css';\r\n\r\nconst convertDataURIToBinary = (dataURI: any) => {\r\n    var BASE64_MARKER = ';base64,';\r\n    var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\r\n    var base64 = dataURI.substring(base64Index);\r\n    var raw = window.atob(base64);\r\n    var rawLength = raw.length;\r\n    var array = new Uint8Array(new ArrayBuffer(rawLength));\r\n    for (let i = 0; i < rawLength; i++) {\r\n        array[i] = raw.charCodeAt(i);\r\n    }\r\n    return array;\r\n};\r\n\r\ninterface IProps {\r\n    currentImage: any;\r\n    onSaveImage: (image: any) => void;\r\n}\r\nconst AvatarDropzone: FC<IProps> = ({ currentImage, onSaveImage }) => {\r\n    const [t] = useTranslation();\r\n    const [editor, setEditor] = useState<any>();\r\n    const [editing, setEditing] = useState<boolean>(false);\r\n    const [image, setImage] = useState<any>();\r\n    const setEditorRef = useCallback((edit) => {\r\n        if (edit) {\r\n            setEditor(edit);\r\n        }\r\n    }, []);\r\n    const onDrop = useCallback((acceptedFiles: any[]) => {\r\n        setImage(acceptedFiles[0]);\r\n    }, []);\r\n\r\n    const saveImage = useCallback(\r\n        (e: any) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (!!image && !!editor) {\r\n                const canvas = editor.getImage();\r\n                const dataUrl = canvas.toDataURL();\r\n                const binImage = convertDataURIToBinary(dataUrl);\r\n                store.dispatch(addToLoading());\r\n                onSaveImage(binImage);\r\n            }\r\n        },\r\n        [editor, image, onSaveImage],\r\n    );\r\n\r\n    const cancelEditing = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setEditing(false);\r\n        setImage(undefined);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setEditing(false);\r\n        setImage(undefined);\r\n        store.dispatch(removeFromLoading());\r\n    }, [currentImage]);\r\n\r\n    return (\r\n        <Dropzone onDrop={onDrop} noKeyboard>\r\n            {({ getRootProps, getInputProps }) => (\r\n                <div className='avatar-dropzone-wrapper'>\r\n                    {editing ? (\r\n                        <div {...getRootProps()} title={t('lblDropImageHere')}>\r\n                            <>\r\n                                <AvatarEditor\r\n                                    ref={setEditorRef}\r\n                                    image={image ?? currentImage}\r\n                                    className='avatar-dropzone-editor'\r\n                                    border={1}\r\n                                    width={249}\r\n                                    height={249}\r\n                                />\r\n\r\n                                <input {...getInputProps()} />\r\n                                <button className='avatar-dropzone-save-button' onClick={saveImage}>\r\n                                    {t('lblSave')}\r\n                                </button>\r\n                                <div\r\n                                    className='avatar-dropzone-cancel'\r\n                                    title={t('lblCancelEditing')}\r\n                                    onClick={cancelEditing}\r\n                                >\r\n                                    <X size='26px' className='avatar-dropzone-icon' />\r\n                                </div>\r\n                            </>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <Image src={currentImage} />\r\n                            <div\r\n                                className='avatar-dropzone-edit'\r\n                                title={t('lblEditPhoto')}\r\n                                onClick={(e) => setEditing(true)}\r\n                            >\r\n                                <Camera size='26px' className='avatar-dropzone-icon' />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </Dropzone>\r\n    );\r\n};\r\n\r\nexport { AvatarDropzone };\r\n","import { FC } from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card: FC = ({ children }) => {\r\n    return <div className=\"card\">{children}</div>;\r\n};\r\n","import { FC, useCallback } from 'react';\r\nimport { CheckSquare, Clock, ExternalLink, LogOut, MapPin, Phone, Printer } from 'react-feather';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { uploadOrgImage } from '../../api/organizations';\r\nimport { ImgJpg } from '../../assets';\r\nimport { ERROR_CODES } from '../../constants/errorCodes';\r\nimport { useAppDispatch } from '../../redux/hooks';\r\nimport { removeFromLoading } from '../../redux/reducers/loadingReducer';\r\nimport { fetchOrgs, removeActive } from '../../redux/reducers/organizationsReducer';\r\nimport { store } from '../../redux/store';\r\nimport { notify } from '../../services/notifications';\r\nimport { getImage } from '../../utils/getImage';\r\nimport { useAppHistory } from '../../utils/useAppHistory';\r\nimport { AvatarDropzone } from '../avatar-dropzone';\r\nimport { ProfileInfoItem } from '../profile-info-item';\r\n\r\nimport './BasicOrgInfo.css';\r\n\r\nconst buildLocation = (\r\n    country: string | null,\r\n    city: string | null,\r\n): { url: string | null; label: string | null } | null => {\r\n    let placeLink = null;\r\n    if (!!city || !!country) {\r\n        placeLink = 'https://www.google.com/maps/place/';\r\n        if (!!city) {\r\n            if (!!country) {\r\n                placeLink += ',+ ' + country;\r\n            }\r\n        } else {\r\n            placeLink += country;\r\n        }\r\n    }\r\n\r\n    const arr: string[] = [];\r\n    let label = null;\r\n    if (!!country) {\r\n        arr.push(country);\r\n    }\r\n    if (!!city) {\r\n        arr.push(city);\r\n    }\r\n    if (arr.length !== 0) {\r\n        label = arr.join(', ');\r\n    }\r\n    if (!label && !placeLink) {\r\n        return null;\r\n    }\r\n    return { label, url: placeLink };\r\n};\r\n\r\nconst buildMemberSince = (create_date_formatted: string | null): string | null => {\r\n    if (create_date_formatted) {\r\n        return create_date_formatted;\r\n    }\r\n    return null;\r\n};\r\n\r\nconst buildPhone = (mob: string | null, land: string | null): string | null => {\r\n    if (!mob && !land) {\r\n        return null;\r\n    }\r\n    const arr: string[] = [];\r\n    if (land) {\r\n        arr.push(land);\r\n    }\r\n    if (mob) {\r\n        arr.push(mob);\r\n    }\r\n    if (arr.length !== 0) {\r\n        return arr.join(', ');\r\n    }\r\n    return null;\r\n};\r\n\r\ninterface IProps {\r\n    name: string | null;\r\n    profile_image: string | null;\r\n    country_name: string | null;\r\n    city: string | null;\r\n    create_date_formatted: string | null;\r\n    nickname: string | null;\r\n    phone_number: string | null;\r\n    mobile_number: string | null;\r\n    fax_number: string | null;\r\n    website: string | null;\r\n    privacyData: any;\r\n}\r\n\r\nexport const BasicOrgInfo: FC<IProps> = ({\r\n    nickname,\r\n    name,\r\n    profile_image,\r\n    country_name,\r\n    city,\r\n    create_date_formatted,\r\n    privacyData,\r\n    phone_number,\r\n    mobile_number,\r\n    fax_number,\r\n    website,\r\n}) => {\r\n    const [t] = useTranslation();\r\n    const dispatch = useAppDispatch();\r\n    const { goTo } = useAppHistory();\r\n    const imageUrl = profile_image ? getImage(profile_image) : ImgJpg;\r\n    const orgLocation = buildLocation(country_name, city);\r\n    const memberSince = buildMemberSince(create_date_formatted);\r\n    const phone = buildPhone(phone_number, mobile_number);\r\n\r\n    const backToPersonal = useCallback(() => {\r\n        dispatch(removeActive());\r\n        goTo('/', false, {});\r\n    }, [dispatch, goTo]);\r\n\r\n    const onSaveAvatar = useCallback(\r\n        async (data: any) => {\r\n            const resp = await uploadOrgImage(data);\r\n            if ((resp as any)?.data?.error_id && (resp as any)?.data?.error_id !== 0) {\r\n                notify({ type: 'WARNING', description: ERROR_CODES[(resp as any)?.data?.error_id] });\r\n                store.dispatch(removeFromLoading());\r\n            } else {\r\n                dispatch(fetchOrgs());\r\n            }\r\n        },\r\n        [dispatch],\r\n    );\r\n\r\n    return (\r\n        <div className='basic-org-info'>\r\n            <div className='basic-org-info-image'>\r\n                <AvatarDropzone currentImage={imageUrl} onSaveImage={onSaveAvatar} />\r\n            </div>\r\n            <div>\r\n                {privacyData?.name_public && <div className='org-name'>{name}</div>}\r\n                {nickname && <div className='org-name org-name__nickname'>{nickname}</div>}\r\n            </div>\r\n            <div className='organization-divider' />\r\n            {privacyData?.address_public && orgLocation && (\r\n                <ProfileInfoItem>\r\n                    {orgLocation.url && (\r\n                        <a\r\n                            href={orgLocation.url}\r\n                            target='_blank'\r\n                            rel='noopener noreferrer'\r\n                            className='profile-location'\r\n                        >\r\n                            <MapPin size={15} />\r\n                            {orgLocation.label && <span className='org-location-label'>{orgLocation.label}</span>}\r\n                        </a>\r\n                    )}\r\n                </ProfileInfoItem>\r\n            )}\r\n            {privacyData?.phone_public && phone && (\r\n                <ProfileInfoItem>\r\n                    <div className='profile-info-data'>\r\n                        <Phone size={15} />\r\n                        <span className='profile-info-label'>{phone}</span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n            )}\r\n            {privacyData?.phone_public && fax_number && (\r\n                <ProfileInfoItem>\r\n                    <div className='profile-info-data'>\r\n                        <Printer size={15} />\r\n                        <span className='profile-info-label'>{fax_number}</span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n            )}\r\n            {privacyData?.website_public && website && (\r\n                <ProfileInfoItem>\r\n                    <div className='profile-info-data'>\r\n                        <ExternalLink size={15} />\r\n                        <span className='profile-info-label'>{website}</span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n            )}\r\n            {memberSince && (\r\n                <ProfileInfoItem>\r\n                    <div className='org-info-data'>\r\n                        <Clock size={15} />\r\n                        <span className='org-info-label'>\r\n                            {t('lblOrganizationCreated')}: {memberSince}\r\n                        </span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n            )}\r\n            <div className='org-buttons'>\r\n                <button className='org-button-1' onClick={() => {}}>\r\n                    <CheckSquare size={15} />\r\n                    <span>{t('lblPublishedItems')}</span>\r\n                </button>\r\n                <button className='org-button-2' onClick={backToPersonal}>\r\n                    <LogOut size={15} />\r\n                    <span>{t('lblSignOffFromProfile')}</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Row, Form } from 'antd';\r\nimport { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { Input } from '../input';\r\nimport { FormCol } from '../profile-form/FormCol';\r\nimport { Select } from '../select';\r\n\r\nconst { Item } = Form;\r\n\r\ninterface IProps {\r\n    hasRights: boolean;\r\n}\r\n\r\nexport const AccountData: FC<IProps> = ({ hasRights }) => {\r\n    const [t] = useTranslation();\r\n    const countries = useAppSelector((state) => state.countries.list);\r\n    const countryOptions = countries.map(({ id, name }) => ({ value: id.toString(), label: name }));\r\n    return (\r\n        <>\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol>\r\n                    <Item name=\"nickname\">\r\n                        <Input label={t('lblUserId')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol />\r\n                <FormCol>\r\n                    <Item name=\"name\">\r\n                        <Input label={t('lblCompanyName')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol />\r\n\r\n                <FormCol>\r\n                    <Item name=\"description\">\r\n                        <Input label={t('lblLongCompanyName')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol />\r\n\r\n                <FormCol>\r\n                    <Item name=\"country\">\r\n                        <Select label={t('lblCountry')} options={countryOptions} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol />\r\n                <FormCol>\r\n                    <Item name=\"owner_nickname\">\r\n                        <Input label={t('lblOwner')} disabled />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"organization_type_name\">\r\n                        <Input label={t('lblOrganizationType')} disabled />\r\n                    </Item>\r\n                </FormCol>\r\n            </Row>\r\n            {hasRights && (\r\n                <button type=\"submit\" className=\"organization-save-button\">\r\n                    {t('lblSave')}\r\n                </button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport { X } from 'react-feather';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Table } from 'reactstrap';\r\nimport './style.css';\r\n\r\ninterface IProps {\r\n    users: any[];\r\n    removeUser: (userId: string) => Promise<void>;\r\n}\r\n\r\nexport const LinkedAccounts: FC<IProps> = ({ users, removeUser }) => {\r\n    const [t] = useTranslation();\r\n\r\n    if (users?.length !== 0) {\r\n        return (\r\n            <>\r\n                <Table responsive bordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{t('lblUsername')}</th>\r\n                            <th>{t('lblName')}</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((item) => {\r\n                            const name: string[] = [];\r\n                            if (item.first_name) {\r\n                                name.push(item.first_name);\r\n                            }\r\n                            if (item.last_name) {\r\n                                name.push(item.last_name);\r\n                            }\r\n                            return (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.nickname}</td>\r\n                                    <td>{name}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                removeUser(item.id);\r\n                                            }}\r\n                                        >\r\n                                            <X size={15} />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n                <button type=\"submit\" className=\"organization-save-button\">\r\n                    {t('lblAddLinkedAccount')}\r\n                </button>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Table responsive bordered>\r\n                <thead>\r\n                    <tr key={11}>\r\n                        <td colSpan={3} className=\"text-align-center\">\r\n                            {t('lblNoData')}\r\n                        </td>\r\n                    </tr>\r\n                </thead>\r\n            </Table>\r\n            <button type=\"button\" className=\"organization-save-button\">\r\n                {t('lblAddLinkedAccount')}\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n","import { Row, Form } from 'antd';\r\nimport { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Input } from '../input';\r\nimport { FormCol } from '../profile-form/FormCol';\r\nimport { FormCol2 } from '../profile-form/FormCol2';\r\nimport { Select } from '../select';\r\n\r\nconst { Item } = Form;\r\n\r\ninterface IProps {\r\n    hasRights: boolean;\r\n}\r\n\r\nexport const OrganizationData: FC<IProps> = ({ hasRights }) => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <>\r\n            {' '}\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol>\r\n                    <Item name=\"taxable\">\r\n                        <Select\r\n                            label={t('lblVatPayer')}\r\n                            options={[\r\n                                { label: t('lblYes'), value: '1' },\r\n                                { label: t('lblNo'), value: '2' },\r\n                            ]}\r\n                            disabled={!hasRights}\r\n                        />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"vat_id\">\r\n                        <Input label={t('lblVatId')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"address\">\r\n                        <Input label={t('lblAddress')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"address_2\">\r\n                        <Input label={t('lblAddress') + ' ' + 2} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"post_code\">\r\n                        <Input label={t('lblPostcode')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"city\">\r\n                        <Input label={t('lblCity')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol2>\r\n                    <Item name=\"mobile_number\">\r\n                        <Input label={t('lblMobileTelephoneNumber')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol2>\r\n                <FormCol2>\r\n                    <Item name=\"phone_number\">\r\n                        <Input label={t('lblLandlineTelephoneNumber')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol2>\r\n                <FormCol2>\r\n                    <Item name=\"fax_number\">\r\n                        <Input label={t('lblFaxNumber')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol2>\r\n                <FormCol2>\r\n                    <Item name=\"website\">\r\n                        <Input label={t('lblWebsite')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol2>\r\n                <FormCol2>\r\n                    <Item name=\"email\">\r\n                        <Input label={t('lblEmail')} disabled={!hasRights} />\r\n                    </Item>\r\n                </FormCol2>\r\n            </Row>\r\n            {hasRights && (\r\n                <button type=\"submit\" className=\"organization-save-button\">\r\n                    {t('lblSave')}\r\n                </button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import { Col, Row, Form, Checkbox } from 'antd';\r\nimport { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './Security.css';\r\n\r\nconst { Item } = Form;\r\n\r\ninterface IProps {\r\n    hasRights: boolean;\r\n}\r\n\r\nexport const SecurityPrivacy: FC<IProps> = ({ hasRights }) => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Item name=\"name_public\" valuePropName=\"checked\" className=\"no-gap\">\r\n                        <Checkbox disabled={!hasRights}>{t('lblShowOrganizationNamePublic')}</Checkbox>\r\n                    </Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Item name=\"address_public\" valuePropName=\"checked\" className=\"no-gap\">\r\n                        <Checkbox disabled={!hasRights}>{t('lblShowCompanyAddress')}</Checkbox>\r\n                    </Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Item name=\"phone_public\" valuePropName=\"checked\" className=\"no-gap\">\r\n                        <Checkbox disabled={!hasRights}>{t('lblMobilePhoneVisible')}</Checkbox>\r\n                    </Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Item name=\"website_public\" valuePropName=\"checked\" className=\"no-gap\">\r\n                        <Checkbox disabled={!hasRights}>{t('lblWebsiteVisible')}</Checkbox>\r\n                    </Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Item name=\"expired_items_notifications\" valuePropName=\"checked\" className=\"no-gap\">\r\n                        <Checkbox disabled={!hasRights}>{t('lblNotificationsExpiredItems')}</Checkbox>\r\n                    </Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Item name=\"contact_notifications\" valuePropName=\"checked\" className=\"no-gap\">\r\n                        <Checkbox disabled={!hasRights}>{t('lblNotificationsNewMessages')}</Checkbox>\r\n                    </Item>\r\n                </Col>\r\n            </Row>\r\n            {hasRights && (\r\n                <button type=\"submit\" className=\"organization-save-button\">\r\n                    {t('lblSave')}\r\n                </button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import { Form, Tabs } from 'antd';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { updateOrganization } from '../../api/organizations';\r\nimport { updatePrivacyOrg } from '../../api/privacy';\r\nimport { ERROR_CODES } from '../../constants/errorCodes';\r\nimport { CustomTabs } from '../../custom-tabs';\r\nimport { useAppDispatch } from '../../redux/hooks';\r\nimport { fetchOrgs } from '../../redux/reducers/organizationsReducer';\r\nimport { notify } from '../../services/notifications';\r\nimport { PageTitle } from '../page-title/PageTitle';\r\nimport { AccountData } from './AccountData';\r\nimport { LinkedAccounts } from './LinkedAccounts';\r\nimport { OrganizationData } from './OrganizationData';\r\n\r\nimport './OrganizationForm.css';\r\nimport { SecurityPrivacy } from './SecurityPrivacy';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface IProps {\r\n    org: any;\r\n    privacyData: any;\r\n    users: any[];\r\n    hasRights: boolean;\r\n    userId: number;\r\n    removeUser: (userId: string) => Promise<void>;\r\n}\r\n\r\nexport const OrganizationForm: FC<IProps> = ({ removeUser, org, privacyData, users, hasRights, userId }) => {\r\n    const [t] = useTranslation();\r\n    const [form] = useForm();\r\n    const dispatch = useAppDispatch();\r\n    const [initVals, setInitValues] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        let data: any = {};\r\n        if (org.nickname) {\r\n            data.nickname = org.nickname;\r\n        }\r\n        if (org.name) {\r\n            data.name = org.name;\r\n        }\r\n        if (org.description) {\r\n            data.description = org.description;\r\n        }\r\n        if (org.country) {\r\n            data.country = org.country.toString();\r\n        }\r\n        if (org.owner_nickname) {\r\n            data.owner_nickname = org.owner_nickname;\r\n        }\r\n        if (org.organization_type_name) {\r\n            data.organization_type_name = org.organization_type_name;\r\n        }\r\n        if (org.taxable) {\r\n            data.taxable = '1';\r\n        } else {\r\n            data.taxable = '2';\r\n        }\r\n        if (org.vat_id) {\r\n            data.vat_id = org.vat_id;\r\n        }\r\n        if (org.address) {\r\n            data.address = org.address;\r\n        }\r\n        if (org.address_2) {\r\n            data.address_2 = org.address_2;\r\n        }\r\n        if (org.post_code) {\r\n            data.post_code = org.post_code;\r\n        }\r\n        if (org.city) {\r\n            data.city = org.city;\r\n        }\r\n        if (org.mobile_number) {\r\n            data.mobile_number = org.mobile_number;\r\n        }\r\n        if (org.phone_number) {\r\n            data.phone_number = org.phone_number;\r\n        }\r\n        if (org.fax_number) {\r\n            data.fax_number = org.fax_number;\r\n        }\r\n        if (org.website) {\r\n            data.website = org.website;\r\n        }\r\n        if (org.email) {\r\n            data.email = org.email;\r\n        }\r\n\r\n        data.address_public = privacyData.address_public;\r\n        data.contact_notifications = privacyData.contact_notifications;\r\n        data.email_public = privacyData.email_public;\r\n        data.expired_items_notifications = privacyData.expired_items_notifications;\r\n        data.name_public = privacyData.name_public;\r\n        data.phone_public = privacyData.phone_public;\r\n        data.website_public = privacyData.website_public;\r\n        setInitValues(data);\r\n    }, [org, privacyData]);\r\n\r\n    const onFinish = useCallback(\r\n        async (values: any) => {\r\n            if (!form.isFieldsTouched()) {\r\n                return;\r\n            }\r\n            const accountData: any = { ...org };\r\n            if (accountData.id) {\r\n                accountData.organization_id = accountData.id;\r\n            }\r\n            if (values.nickname) {\r\n                accountData.nickname = values.nickname;\r\n            }\r\n            if (values.name) {\r\n                accountData.name = values.name;\r\n            }\r\n            if (values.description) {\r\n                accountData.description = values.description;\r\n            }\r\n            if (values.country) {\r\n                accountData.country = parseInt(values.country);\r\n            }\r\n            if (values.owner_nickname) {\r\n                accountData.owner_nickname = values.owner_nickname;\r\n            }\r\n            if (values.organization_type_name) {\r\n                accountData.organization_type_name = values.organization_type_name;\r\n            }\r\n            if (values.taxable === '1') {\r\n                accountData.taxable = true;\r\n            } else {\r\n                accountData.taxable = false;\r\n            }\r\n            if (values.vat_id) {\r\n                accountData.vat_id = values.vat_id;\r\n            }\r\n            if (values.address) {\r\n                accountData.address = values.address;\r\n            }\r\n            if (values.address_2) {\r\n                accountData.address_2 = values.address_2;\r\n            }\r\n            if (values.post_code) {\r\n                accountData.post_code = values.post_code;\r\n            }\r\n            if (values.city) {\r\n                accountData.city = values.city;\r\n            }\r\n            if (values.mobile_number) {\r\n                accountData.mobile_number = values.mobile_number;\r\n            }\r\n            if (values.phone_number) {\r\n                accountData.phone_number = values.phone_number;\r\n            }\r\n            if (values.fax_number) {\r\n                accountData.fax_number = values.fax_number;\r\n            }\r\n            if (values.website) {\r\n                accountData.website = values.website;\r\n            }\r\n            if (values.email) {\r\n                accountData.email = values.email;\r\n            }\r\n\r\n            const privacyValues: any = { ...privacyData };\r\n\r\n            if (values.address_public !== undefined) {\r\n                privacyValues.address_public = values.address_public;\r\n            }\r\n            if (values.contact_notifications !== undefined) {\r\n                privacyValues.contact_notifications = values.contact_notifications;\r\n            }\r\n            if (values.email_public !== undefined) {\r\n                privacyValues.email_public = values.email_public;\r\n            }\r\n            if (values.expired_items_notifications !== undefined) {\r\n                privacyValues.expired_items_notifications = values.expired_items_notifications;\r\n            }\r\n            if (values.name_public !== undefined) {\r\n                privacyValues.name_public = values.name_public;\r\n            }\r\n            if (values.phone_public !== undefined) {\r\n                privacyValues.phone_public = values.phone_public;\r\n            }\r\n            if (values.website_public !== undefined) {\r\n                privacyValues.website_public = values.website_public;\r\n            }\r\n\r\n            try {\r\n                const resp = await updateOrganization(accountData);\r\n                if ((resp as any)?.data?.error_id) {\r\n                    if ((resp as any)?.error_id !== 0) {\r\n                        notify({ type: 'WARNING', description: ERROR_CODES[(resp as any)?.data?.error_id] });\r\n                    } else {\r\n                        notify({ type: 'SUCCESS', description: 'lblSuccessProfileUpdate' });\r\n                    }\r\n                }\r\n                await updatePrivacyOrg(privacyValues);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n            dispatch(fetchOrgs());\r\n        },\r\n        [dispatch, form, org, privacyData]\r\n    );\r\n\r\n    if (!initVals) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Form form={form} name=\"organization-form\" initialValues={initVals} onFinish={onFinish}>\r\n            <div className=\"profile-form-header\">\r\n                <PageTitle title={t('lblOrganizationProfile')} />\r\n            </div>\r\n            <Tabs defaultActiveKey=\"1\" type=\"card\" renderTabBar={(tabs) => <CustomTabs tabs={tabs} />}>\r\n                <TabPane key=\"1\" tab={t('lblAccountData')}>\r\n                    <AccountData hasRights={hasRights} />\r\n                </TabPane>\r\n                <TabPane key=\"2\" tab={t('lblCompanyData')}>\r\n                    <OrganizationData hasRights={hasRights} />\r\n                </TabPane>\r\n                <TabPane key=\"3\" tab={t('lblSecurityPrivacy')}>\r\n                    <SecurityPrivacy hasRights={hasRights} />\r\n                </TabPane>\r\n                {userId === org.owner && (\r\n                    <TabPane key=\"4\" tab={t('lblLinkedAccounts')}>\r\n                        <LinkedAccounts users={users} removeUser={removeUser} />\r\n                    </TabPane>\r\n                )}\r\n            </Tabs>\r\n        </Form>\r\n    );\r\n};\r\n","import { Col, Row } from 'antd';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { deleteOrganizationUser, getOrganizationUsers } from '../../api/organizations';\r\nimport { ERROR_CODES } from '../../constants/errorCodes';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { notify } from '../../services/notifications';\r\nimport { BasicOrgInfo } from '../basic-org-info';\r\nimport { Card } from '../card';\r\nimport { OrganizationForm } from '../organization-form';\r\nimport './Organization.css';\r\n\r\nexport const Organization = () => {\r\n    const orgs = useAppSelector((state) => state.organizations.list);\r\n    const mems = useAppSelector((state) => state.organizations.membership);\r\n    const active = useAppSelector((state) => state.organizations.active)!;\r\n    const privacyData = useAppSelector((state) => state.organizations.privacy);\r\n    const userId = useAppSelector((state) => state.user.id)!;\r\n\r\n    const [users, setUsers] = useState<any[]>();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const resp = await getOrganizationUsers();\r\n        if ((resp as any)?.data?.error_id && (resp as any)?.error_id !== 0) {\r\n            notify({ type: 'WARNING', description: ERROR_CODES[(resp as any)?.data?.error_id] });\r\n        }\r\n        if (resp?.data?.items?.length !== 0) {\r\n            setUsers(resp.data.items);\r\n            return;\r\n        }\r\n        setUsers([]);\r\n    }, []);\r\n\r\n    const removeUser = useCallback(\r\n        async (userId: string) => {\r\n            await deleteOrganizationUser(userId);\r\n            await fetchData();\r\n        },\r\n        [fetchData],\r\n    );\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const org = [...orgs, ...mems].find(({ id }) => id === active)! as any;\r\n    const hasRights = orgs.find(({ id }) => id === active) !== undefined;\r\n    if (!org) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Row gutter={[20, 0]}>\r\n            <Col xl={6} lg={8} sm={8} xs={24}>\r\n                <Card>\r\n                    <BasicOrgInfo\r\n                        profile_image={org.profile_image}\r\n                        name={org.name}\r\n                        nickname={org.nickname}\r\n                        country_name={org.country_name}\r\n                        city={org.city}\r\n                        create_date_formatted={org.create_date_formatted}\r\n                        phone_number={org.phone_number}\r\n                        mobile_number={org.mobile_number}\r\n                        fax_number={org.fax_number}\r\n                        website={org.website}\r\n                        privacyData={privacyData}\r\n                    />\r\n                </Card>\r\n            </Col>\r\n            <Col xl={18} lg={16} sm={16} xs={24}>\r\n                <Card>\r\n                    {users !== undefined && (\r\n                        <OrganizationForm\r\n                            org={org}\r\n                            privacyData={privacyData}\r\n                            users={users}\r\n                            hasRights={hasRights}\r\n                            userId={userId}\r\n                            removeUser={removeUser}\r\n                        />\r\n                    )}\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n","import { Organization } from '../../components/organization';\r\nimport './OrganizationProfile.css';\r\n\r\nconst OrganizationProfile = () => {\r\n    return (\r\n        <div className=\"organization-profile\">\r\n            <Organization />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrganizationProfile;\r\n"],"sourceRoot":""}