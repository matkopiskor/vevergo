{"version":3,"sources":["api/itemMedia.ts","components/page-container/PageContainer.tsx","api/singleAd.ts","components/ad-details-icons/AdDetailsIcons.tsx","components/ad-details-price/AdDetailsPrice.tsx","components/image-gallery/ImageGallery.tsx","components/ad-details-details-container/AdDetailsDetailsContainer.tsx","pages/ad-details/AdDetails.tsx","pages/ad-details/useAdDetails.ts"],"names":["getItemMedia","itemId","a","ApiService","PageContainer","children","className","getSingleAd","adId","query","headers","url","AdDetailsIcons","isFavorite","isLoggedIn","onFavoriteClick","userEmail","t","useTranslation","postToFacebookUrl","useMemo","siteUrl","window","location","href","encodedUrl","encodeURI","mailItemUrl","printItem","useCallback","print","onClick","title","target","rel","AdDetailsPrice","currency_name","price_formatted","converted_price_formatted","measurement_unit_name","cn","shouldDisplaySeparator","price_by_agreement","activeCurrency","ImageGallery","images","imagesForGallery","map","idx","imageUrl","thumbnailUrl","videoUrl","media_type","obj","original","thumbnail","description","comment","originalClass","thumbnailClass","width","height","src","frameBorder","allowFullScreen","customItemRender","items","showPlayButton","showBullets","showIndex","lazyLoad","count","AdDetailsDetailsContainer","attributes","getValueAndUnit","value_formatted","additional_measurement_units","metric_system","isMetricSystem","length","find","name","details","activeKey","reduce","memo","item","index","group_name","newItem","key","value","unit","push","useState","Set","detailGroupsClosed","setDetailGroupsClosed","toggleDetailGroup","detailGroupKey","prev","has","delete","add","Object","keys","detailGroup","isDetailGroupOpen","detail","idxD","TransformTrueFalseToIcons","size","AdDetails","useAppSelector","state","currencies","active","currencyList","list","languages","activeLanguage","id","code","setAdId","ad","setAd","activeCurrencyName","useEffect","pathname","split","console","log","iss_authentication_token","currency","response","data","error_id","mediaResponse","media","acc","video_code","newImage","image_height","image_width","default","unshift","fetchAd","userLink","owner","text","country_name","link","place","placeLink","placeText","modalOpen","setModalOpen","reportModalOpen","setReportModalOpen","userId","useAdDetails","listing_type_name","owner_nickname","expiry_date_formatted","change_date_formatted","create_date_formatted","view_count","owner_phone_number","owner_mobile_number","owner_name","show_number","HTMLReactParser","to"],"mappings":"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","file":"static/js/7.f235b7c7.chunk.js","sourcesContent":["import { ApiService } from '.';\r\n\r\nexport const getItemMedia = async (itemId: string) => {\r\n    return ApiService<any>('GET', `/view/item_listing/${itemId}/media`);\r\n};\r\n","import { FC } from 'react';\r\n\r\nimport './PageContainer.css';\r\n\r\nexport const PageContainer: FC = ({ children }) => {\r\n    return <div className='page-container'>{children}</div>;\r\n};\r\n","import { ApiService } from '.';\r\n\r\nexport const getSingleAd = async (adId: string, query: any, headers: any) => {\r\n    const url = `view/item_listing/${adId}`;\r\n    return ApiService<any>('GET', url, query, null, headers);\r\n};\r\n","import { FC, useCallback, useMemo } from 'react';\r\nimport { Facebook, Mail, Printer, Star } from 'react-feather';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './AdDetailsIcons.css';\r\n\r\ninterface IProps {\r\n    isFavorite: boolean;\r\n    isLoggedIn: boolean;\r\n    className: string;\r\n    onFavoriteClick: () => void;\r\n    userEmail: string;\r\n}\r\n\r\nexport const AdDetailsIcons: FC<IProps> = ({ isFavorite, isLoggedIn, className, onFavoriteClick, userEmail }) => {\r\n    const { t } = useTranslation();\r\n    const postToFacebookUrl = useMemo(() => {\r\n        const siteUrl = window.location.href;\r\n        const encodedUrl = encodeURI(siteUrl);\r\n        const fbUrl = `https://facebook.com/sharer/sharer.php?u=${encodedUrl}`;\r\n        return fbUrl;\r\n    }, []);\r\n    const mailItemUrl = useMemo(() => {\r\n        const mailUrl = `mailto:${userEmail}`;\r\n        return mailUrl;\r\n    }, [userEmail]);\r\n    const printItem = useCallback(() => {\r\n        window.print();\r\n    }, []);\r\n    return (\r\n        <div className={className}>\r\n            {isLoggedIn && (\r\n                <span\r\n                    onClick={onFavoriteClick}\r\n                    title={isFavorite ? t('lblRemoveFromFavorites') : t('lblAddToFavorites')}\r\n                    className='ad-details-icon'\r\n                >\r\n                    <Star className={`ad-details-icon__svg ${isFavorite ? 'favorite' : ''}`} />\r\n                </span>\r\n            )}\r\n            <a href={postToFacebookUrl} target='_blank' rel='noopener noreferrer' className='ad-details-icon'>\r\n                <Facebook className='ad-details-icon__svg' />\r\n            </a>\r\n            <a href={mailItemUrl} target='_blank' rel='noopener noreferrer' className='ad-details-icon'>\r\n                <Mail className='ad-details-icon__svg' />\r\n            </a>\r\n            <span onClick={printItem} className='ad-details-icon'>\r\n                <Printer className='ad-details-icon__svg' />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './AdDetailsPrice.css';\r\n\r\ninterface IProps {\r\n    currency_name: string;\r\n    price_formatted: string;\r\n    converted_price_formatted: string;\r\n    measurement_unit_name: string;\r\n    cn: string;\r\n    shouldDisplaySeparator: 'top' | 'bottom';\r\n    price_by_agreement: string;\r\n    activeCurrency: string;\r\n}\r\n\r\nexport const AdDetailsPrice: FC<IProps> = ({\r\n    currency_name,\r\n    price_formatted,\r\n    converted_price_formatted,\r\n    measurement_unit_name,\r\n    cn,\r\n    shouldDisplaySeparator,\r\n    price_by_agreement,\r\n    activeCurrency,\r\n}) => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <div className={cn}>\r\n            {shouldDisplaySeparator === 'top' && <div className='ad-details-price__horizontal-separator' />}\r\n            <h2>\r\n                <strong>\r\n                    {currency_name === activeCurrency\r\n                        ? price_formatted\r\n                        : !converted_price_formatted && !price_formatted\r\n                        ? null\r\n                        : `≈ ${converted_price_formatted}`}{' '}\r\n                    {!converted_price_formatted && !price_formatted\r\n                        ? !!price_by_agreement\r\n                            ? t('lblPriceByAgreement')\r\n                            : null\r\n                        : activeCurrency}\r\n                    {!!measurement_unit_name && '/'}\r\n                    {measurement_unit_name}\r\n                </strong>\r\n            </h2>\r\n            {currency_name !== activeCurrency && (\r\n                <span className='ad-details-price__segment-text'>\r\n                    {price_formatted} {currency_name}\r\n                    {!!measurement_unit_name && '/'}\r\n                    {measurement_unit_name}\r\n                </span>\r\n            )}\r\n            {shouldDisplaySeparator === 'bottom' && <div className='ad-details-price__horizontal-separator' />}\r\n        </div>\r\n    );\r\n};\r\n","import { FC, useMemo } from 'react';\r\nimport ReactImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\n\r\nimport './ImageGallery.css';\r\n\r\ninterface IProps {\r\n    images: any[];\r\n}\r\n\r\nconst customItemRender = (videoUrl: any, idx: any) => {\r\n    return (\r\n        <div className='video-wrapper'>\r\n            <iframe title={idx} width='560' height='315' src={videoUrl} frameBorder='0' allowFullScreen></iframe>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const ImageGallery: FC<IProps> = ({ images }) => {\r\n    const imagesForGallery = useMemo(\r\n        () =>\r\n            images.map(({ imageUrl, thumbnailUrl, videoUrl, media_type, comment }, idx) => {\r\n                const obj: any = {\r\n                    original: imageUrl,\r\n                    thumbnail: thumbnailUrl,\r\n                    description: comment,\r\n                    originalClass: 'image-gallery-original',\r\n                    thumbnailClass: 'image-gallery-thumbnail',\r\n                };\r\n                if (media_type === 1) {\r\n                    return obj;\r\n                }\r\n                obj['renderItem'] = () => customItemRender(videoUrl, idx);\r\n                return obj;\r\n            }),\r\n        [images],\r\n    );\r\n    return (\r\n        <div className='image-gallery-wrapper'>\r\n            <ReactImageGallery\r\n                items={imagesForGallery}\r\n                showPlayButton={false}\r\n                showBullets={true}\r\n                showIndex={true}\r\n                lazyLoad={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { FC, useCallback, useMemo, useState } from 'react';\r\nimport { Check, Minus, Plus, X } from 'react-feather';\r\n\r\nimport './AdDetailsDetailsContainer.css';\r\n\r\ninterface IProps {\r\n    attributes: any;\r\n}\r\n\r\nlet count = 0;\r\n\r\nexport const AdDetailsDetailsContainer: FC<IProps> = ({ attributes }) => {\r\n    const getValueAndUnit = useCallback(\r\n        (value_formatted, measurement_unit_name, additional_measurement_units, metric_system, isMetricSystem) => {\r\n            if (additional_measurement_units.length === 0) {\r\n                return [value_formatted, measurement_unit_name];\r\n            }\r\n            if (metric_system === isMetricSystem) {\r\n                return [value_formatted, measurement_unit_name];\r\n            }\r\n            const additionalMeasurementUnit = additional_measurement_units.find(\r\n                ({ metric_system }: any) => metric_system === isMetricSystem,\r\n            );\r\n            const { value_formatted: value_formatted2 = value_formatted, name } = additionalMeasurementUnit || {};\r\n            return [value_formatted2, name];\r\n        },\r\n        [],\r\n    );\r\n    const details = useMemo(() => {\r\n        const isMetricSystem = false;\r\n        let activeKey = '';\r\n        const detailsPerKey = attributes.reduce((memo: any, item: any, index: any) => {\r\n            const {\r\n                group_name,\r\n                name,\r\n                value_formatted,\r\n                measurement_unit_name,\r\n                additional_measurement_units,\r\n                metric_system,\r\n            } = item;\r\n            if (!memo[group_name]) {\r\n                memo[group_name] = [];\r\n            }\r\n            const [value, unit] = getValueAndUnit(\r\n                value_formatted,\r\n                measurement_unit_name,\r\n                additional_measurement_units,\r\n                metric_system,\r\n                isMetricSystem,\r\n            );\r\n            let newItem = {\r\n                key: name,\r\n                value: value,\r\n                unit: unit,\r\n            };\r\n            if (index === 0) {\r\n                activeKey = name;\r\n            }\r\n            if (index !== 0) {\r\n                if (name !== activeKey) {\r\n                    activeKey = name;\r\n                } else {\r\n                    newItem.key = '';\r\n                }\r\n            }\r\n            memo[group_name].push(newItem);\r\n            return memo;\r\n        }, {});\r\n        return detailsPerKey;\r\n    }, [attributes, getValueAndUnit]);\r\n    const [detailGroupsClosed, setDetailGroupsClosed] = useState<Set<any>>(new Set());\r\n    const toggleDetailGroup = useCallback((detailGroupKey) => {\r\n        setDetailGroupsClosed((prev) => {\r\n            if (prev.has(detailGroupKey)) {\r\n                prev.delete(detailGroupKey);\r\n            } else {\r\n                prev.add(detailGroupKey);\r\n            }\r\n            return prev;\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className='ad-details__details-info-container'>\r\n            {Object.keys(details).map((detailGroupKey, idx) => {\r\n                const detailGroup = details[detailGroupKey];\r\n                const isDetailGroupOpen = !detailGroupsClosed.has(detailGroupKey);\r\n                count++;\r\n\r\n                return (\r\n                    <div key={idx} className='ad-details__details-info-group-container'>\r\n                        <div\r\n                            className={`ad-details__details-info-group-title-container ${\r\n                                count % 2 === 1 ? 'ad-details__details-info-group-item-white' : ''\r\n                            }`}\r\n                            onClick={() => toggleDetailGroup(detailGroupKey)}\r\n                        >\r\n                            <div>\r\n                                {isDetailGroupOpen ? (\r\n                                    <Minus className='ad-details__details-info-group-title-container-icon' />\r\n                                ) : (\r\n                                    <Plus className='ad-details__details-info-group-title-container-icon' />\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                <strong>{detailGroupKey}</strong>\r\n                            </div>\r\n                        </div>\r\n                        {isDetailGroupOpen && (\r\n                            <div className='ad-details__details-info-group-info-container'>\r\n                                {detailGroup.map((detail: any, idxD: any) => {\r\n                                    count++;\r\n                                    const { key, value, unit } = detail;\r\n                                    return (\r\n                                        <div\r\n                                            key={idx}\r\n                                            className={`ad-details__details-info-group-info-item ${\r\n                                                count % 2 === 1 ? 'ad-details__details-info-group-item-white' : ''\r\n                                            }`}\r\n                                        >\r\n                                            <div className='ad-details__details-info-group-key'>\r\n                                                {key}\r\n                                                {key !== '' ? ':' : ''}\r\n                                            </div>\r\n                                            <div className='ad-details__details-info-group-value'>\r\n                                                <strong>\r\n                                                    <TransformTrueFalseToIcons value={value} /> {unit}\r\n                                                </strong>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TransformTrueFalseToIcons: FC<any> = ({ value }) => {\r\n    switch (value) {\r\n        case 'True':\r\n            return <Check size={15} />;\r\n        case 'False':\r\n            return <X size={15} />;\r\n        default:\r\n            return value;\r\n    }\r\n};\r\n","import { FC } from 'react';\r\nimport { PageContainer } from '../../components/page-container';\r\nimport { useAdDetails } from './useAdDetails';\r\n\r\nimport { AdDetailsIcons } from '../../components/ad-details-icons';\r\n\r\nimport './AdDetails.css';\r\nimport { AdDetailsPrice } from '../../components/ad-details-price';\r\nimport { ImageGallery } from '../../components/image-gallery';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { AdDetailsDetailsContainer } from '../../components/ad-details-details-container';\r\nimport { Mail, MapPin, Phone } from 'react-feather';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdDetails: FC = () => {\r\n    const { t } = useTranslation();\r\n    const {\r\n        ad,\r\n        isFavorite,\r\n        isLoggedIn,\r\n        onFavoriteClick,\r\n        activeCurrencyName,\r\n        userLink,\r\n        placeLink,\r\n        placeText,\r\n        userId,\r\n        modalOpen,\r\n        setModalOpen,\r\n        reportModalOpen,\r\n        setReportModalOpen,\r\n    } = useAdDetails();\r\n    if (!ad) {\r\n        return null;\r\n    }\r\n    const { item, media } = ad;\r\n    const {\r\n        listing_type_name,\r\n        title,\r\n        description,\r\n        attributes,\r\n        price_formatted,\r\n        currency_name,\r\n        converted_price_formatted,\r\n        owner_nickname,\r\n        expiry_date_formatted,\r\n        change_date_formatted,\r\n        create_date_formatted,\r\n        view_count,\r\n        owner_phone_number,\r\n        owner_mobile_number,\r\n        owner,\r\n        measurement_unit_name,\r\n        price_by_agreement,\r\n        owner_name,\r\n    } = item;\r\n    const show_number = owner_mobile_number || owner_phone_number;\r\n    return (\r\n        <>\r\n            <PageContainer>\r\n                <div className=\"ad-details\">\r\n                    <div className=\"ad-details__header\">\r\n                        <span className=\"ad-details__header-title\">\r\n                            <strong>{listing_type_name}</strong>: {title}\r\n                        </span>\r\n                        <AdDetailsIcons\r\n                            isFavorite={isFavorite}\r\n                            isLoggedIn={isLoggedIn}\r\n                            className=\"ad-details-icon-wrapper-desktop\"\r\n                            onFavoriteClick={onFavoriteClick}\r\n                            userEmail=\"test@tset.test\"\r\n                        />\r\n                    </div>\r\n                    <AdDetailsPrice\r\n                        currency_name={currency_name}\r\n                        price_formatted={price_formatted}\r\n                        converted_price_formatted={converted_price_formatted}\r\n                        measurement_unit_name={measurement_unit_name}\r\n                        cn=\"ad-details-price__mobile\"\r\n                        shouldDisplaySeparator={'top'}\r\n                        price_by_agreement={price_by_agreement}\r\n                        activeCurrency={activeCurrencyName}\r\n                    />\r\n                    <div className=\"ad-details__main\">\r\n                        <div className=\"ad-details__main-info\">\r\n                            <div className=\"ad-details__main-swiper\">\r\n                                {media.length !== 0 && <ImageGallery images={media} />}\r\n                            </div>\r\n                            <span className=\"ad-details__section-label\">\r\n                                <strong>{t('lblDescription')}</strong>\r\n                            </span>\r\n                            <div className=\"ad-details-price__horizontal-separator \" />\r\n                            <span className=\"ad-details__section-text\">{HTMLReactParser(description)}</span>\r\n                            <span className=\"ad-details__section-label\">\r\n                                <strong>{t('lblDetails')}</strong>\r\n                            </span>\r\n                            <div className=\"ad-details-price__horizontal-separator \" />\r\n                            <AdDetailsDetailsContainer attributes={attributes} />\r\n                            <div className=\"ad-details-price__horizontal-separator \" />\r\n                        </div>\r\n                        <div className=\"ad-details__empty-segment\" />\r\n                        <div className=\"ad-details__price-segment\">\r\n                            <AdDetailsPrice\r\n                                currency_name={currency_name}\r\n                                price_formatted={price_formatted}\r\n                                converted_price_formatted={converted_price_formatted}\r\n                                measurement_unit_name={measurement_unit_name}\r\n                                cn=\"ad-details-price\"\r\n                                shouldDisplaySeparator={'bottom'}\r\n                                price_by_agreement={price_by_agreement}\r\n                                activeCurrency={activeCurrencyName}\r\n                            />\r\n                            <span className=\"ad-details-price__segment-text\">\r\n                                {t('lblPostedBy')}:{' '}\r\n                                <Link to={userLink}>\r\n                                    {owner_nickname}\r\n                                    {owner_name !== null ? ` (${owner_name})` : ''}\r\n                                </Link>\r\n                            </span>\r\n                            <a\r\n                                href={placeLink}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"ad-details__segmnet-link\"\r\n                            >\r\n                                <MapPin size={15} className=\"ad-details__mappin\" />\r\n                                <span className=\"ad-details__segmnet-link-text\">{placeText}</span>\r\n                            </a>\r\n                            <span className=\"ad-details-price__segment-text\">\r\n                                {t('lblValidTo')}: {expiry_date_formatted}\r\n                            </span>\r\n                            <div className=\"ad-details-price__horizontal-separator \" />\r\n                            <div className=\"ad-details__contact-container\">\r\n                                {isLoggedIn && userId !== owner && (\r\n                                    <div className=\"ad-details__phone-button\" onClick={() => setModalOpen(true)}>\r\n                                        <Mail />\r\n                                        {t('lblContactOwner')}\r\n                                    </div>\r\n                                )}\r\n                                {show_number && (\r\n                                    <div>\r\n                                        <a href={`tel:${show_number}`} className=\"ad-details__phone-button\">\r\n                                            <Phone />\r\n                                            {show_number}\r\n                                        </a>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <AdDetailsIcons\r\n                        isFavorite={isFavorite}\r\n                        isLoggedIn={isLoggedIn}\r\n                        className=\"ad-details-icon-wrapper-mobile\"\r\n                        onFavoriteClick={onFavoriteClick}\r\n                        userEmail=\"test@tset.test\"\r\n                    />\r\n                    <div className=\"ad-details__footer\">\r\n                        <span onClick={() => setReportModalOpen(true)} className=\"ad-details__footer-text report-item\">\r\n                            {t('lblReportItem')}\r\n                        </span>\r\n                        <span className=\"ad-details__footer-text\">\r\n                            {t('lblCreated')}: <strong>{create_date_formatted}</strong>, {t('lblChanged')}:{' '}\r\n                            <strong>{change_date_formatted}</strong>, {t('lblViews')}: <strong>{view_count}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </PageContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdDetails;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { getItemMedia } from '../../api/itemMedia';\r\nimport { getSingleAd } from '../../api/singleAd';\r\nimport { useAppSelector } from '../../redux/hooks';\r\n\r\nexport const useAdDetails = () => {\r\n    const { active: activeCurrency, list: currencyList } = useAppSelector((state) => state.currencies);\r\n    const { active, list } = useAppSelector((state) => state.languages);\r\n    const activeLanguage = useMemo(() => list.find(({ id }) => id === active)?.code, [active, list]);\r\n    const [adId, setAdId] = useState<string | undefined>();\r\n    const [ad, setAd] = useState<any>();\r\n\r\n    const activeCurrencyName = currencyList.find(({ id }) => id === activeCurrency)!.name;\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const path = window.location.pathname;\r\n            const id = path.split('/')[2];\r\n            setAdId(id);\r\n        } catch {\r\n            console.log('error');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchAd = async (id: string) => {\r\n            const headers: any = {\r\n                iss_authentication_token: null,\r\n            };\r\n            if (activeLanguage) {\r\n                headers['accept-language'] = activeLanguage;\r\n            }\r\n            const response = await getSingleAd(id, { currency: activeCurrency }, headers);\r\n            if (response?.data?.error_id !== 0) {\r\n                // TODO\r\n                window.location.href = '/';\r\n            }\r\n            const item = response.data.items[0];\r\n\r\n            const mediaResponse = await getItemMedia(id);\r\n\r\n            const media = mediaResponse.data.items.reduce((acc: any[], item: any) => {\r\n                const { id, comment, media_type, video_code, image_height, image_width, default: defaultImage } = item;\r\n                const newImage = {\r\n                    comment,\r\n                    media_type,\r\n                    image_height,\r\n                    image_width,\r\n                    imageUrl:\r\n                        media_type === 1\r\n                            ? 'https://api.vevergo.com:4443/item_images/' + id + '.jpeg'\r\n                            : 'https://img.youtube.com/vi/' + video_code + '/maxresdefault.jpg',\r\n                    videoUrl: media_type === 2 ? 'https://www.youtube.com/embed/' + video_code : null,\r\n                    thumbnailUrl:\r\n                        media_type === 1\r\n                            ? 'https://api.vevergo.com:4443/item_adjusted_images/' + id + '.jpeg'\r\n                            : 'https://img.youtube.com/vi/' + video_code + '/maxresdefault.jpg',\r\n                };\r\n                if (defaultImage) {\r\n                    acc.unshift(newImage);\r\n                } else {\r\n                    acc.push(newImage);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            const ad = {\r\n                item,\r\n                media,\r\n            };\r\n            setAd(ad);\r\n        };\r\n\r\n        if (adId) {\r\n            fetchAd(adId);\r\n        }\r\n    }, [adId, activeLanguage, activeCurrency]);\r\n\r\n    const isFavorite = useMemo(() => false, []);\r\n    const isLoggedIn = useMemo(() => false, []);\r\n\r\n    const onFavoriteClick = useCallback(() => {}, []);\r\n\r\n    const userId = '1';\r\n    const userLink = useMemo(\r\n        () => (userId === ad?.item?.owner ? '/my-items' : `/profile/${ad?.item?.owner}/items`),\r\n        [ad?.item?.owner]\r\n    );\r\n\r\n    const { placeLink, placeText } = useMemo(() => {\r\n        let text = ad?.item?.country_name ?? '';\r\n        let link = 'https://www.google.com/maps/place/';\r\n        if (!!ad?.item?.place) {\r\n            link += ad?.item?.place + ',+ ' + ad?.item?.country_name;\r\n            text += ', ' + ad?.item?.place;\r\n        } else {\r\n            link += ad?.item?.country_name;\r\n        }\r\n        return {\r\n            placeLink: link,\r\n            placeText: text,\r\n        };\r\n    }, [ad?.item?.country_name, ad?.item?.place]);\r\n\r\n    const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n\r\n    const [reportModalOpen, setReportModalOpen] = useState<boolean>(false);\r\n\r\n    return {\r\n        ad,\r\n        isFavorite,\r\n        isLoggedIn,\r\n        onFavoriteClick,\r\n        activeCurrencyName,\r\n        userLink,\r\n        placeLink,\r\n        placeText,\r\n        userId,\r\n        modalOpen,\r\n        setModalOpen,\r\n        reportModalOpen,\r\n        setReportModalOpen,\r\n    };\r\n};\r\n"],"sourceRoot":""}