{"version":3,"sources":["components/input/Input.tsx","components/page-title/PageTitle.tsx","components/select/Select.tsx","components/profile-form/FormCol.tsx","components/profile-info-item/ProfileInfoItem.tsx","components/profile-form/FormCol2.tsx","components/card/Card.tsx","components/image/Image.tsx","components/basic-profile-info/BasicProfileInfo.tsx","components/profile-form/AccountData.tsx","components/profile-form/PersonalData.tsx","components/profile-form/SecurityPrivacy.tsx","components/profile-form/ProfileForm.tsx","components/modal/Modal.tsx","components/profile-orgs/ProfileOrgs.tsx","components/profile/Profile.tsx","pages/user-profile/UserProfile.tsx"],"names":["Input","label","onChange","value","placeholder","type","name","labelClassName","inputClassName","Prefix","disabled","infoText","className","title","InfoCircleOutlined","prefix","PageTitle","Option","AntSelect","Select","options","mode","removeClear","allowClear","map","FormCol","children","xl","lg","sm","xs","ProfileInfoItem","FormCol2","Card","Image","src","alt","buildName","first","last","arr","push","length","join","BasicProfileInfo","privacyData","profile_image","country_name","city","phone_number","mobile_number","first_name","last_name","nickname","fax_number","website","member_since_formatted","create_date_formatted","useTranslation","t","name_public","address_public","phone_public","website_public","imageUrl","getImage","ImgJpg","userLocation","country","placeLink","url","buildLocation","phone","mob","land","buildPhone","memberSince","buildMemberSince","href","target","rel","size","Item","Form","AccountData","countryOptions","useAppSelector","state","countries","list","id","toString","languageOptions","languages","currencyOptions","currencies","timezoneOptions","timezones","gutter","PersonalData","Group","SecurityPrivacy","span","valuePropName","TabPane","Tabs","ProfileForm","user","dispatch","useAppDispatch","useState","initVals","setInitValues","useEffect","data","email","language","currency","timezone","user_type_name","user_status_name","address","address_2","post_code","gender","metric_system","expired_items_notifications","contact_notifications","onFinish","useCallback","values","a","accountData","parseInt","privacyValues","updateUser","updatePrivacy","console","error","fetchUser","initialValues","defaultActiveKey","tab","Modal","visible","okProps","cancelProps","footer","onClick","handleOk","handleCancel","ProfileOrgs","goTo","useAppHistory","organizations","membership","mappedOrgsList","mappedOrgsMems","setActive","setActiveOrg","orgId","setOrgId","deleteOrg","deleteOrgAction","undefined","Profile","privacy","shouldRefresh","userProfileRefresh","UserProfile"],"mappings":"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","file":"static/js/8.57ecf31d.chunk.js","sourcesContent":["import { ChangeEventHandler, FC } from 'react';\r\nimport { Input as AntInput, Tooltip } from 'antd';\r\n\r\nimport './Input.css';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n    label?: string;\r\n    onChange?: ChangeEventHandler<HTMLInputElement>;\r\n    value?: string | number | undefined;\r\n    placeholder?: string;\r\n    type?: string;\r\n    name?: string;\r\n    labelClassName?: string;\r\n    inputClassName?: string;\r\n    Prefix?: JSX.Element;\r\n    disabled?: boolean;\r\n    infoText?: string;\r\n}\r\n\r\nexport const Input: FC<Props> = ({\r\n    label,\r\n    onChange,\r\n    value,\r\n    placeholder,\r\n    type = 'text',\r\n    name,\r\n    labelClassName = '',\r\n    inputClassName = '',\r\n    Prefix,\r\n    disabled,\r\n    infoText,\r\n}) => {\r\n    return (\r\n        <div className=\"input__wrapper\">\r\n            <div className=\"info-text-wrapper\">\r\n                <label className={`input__label ${labelClassName}`}>{label}</label>\r\n                {infoText && (\r\n                    <Tooltip title={infoText}>\r\n                        <InfoCircleOutlined />\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n\r\n            <AntInput\r\n                type={type}\r\n                className={`input__select ${inputClassName}`}\r\n                onChange={onChange}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                prefix={Prefix}\r\n                disabled={disabled}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\n\r\nimport './PageTitle.css';\r\n\r\ninterface IProps {\r\n    title: string;\r\n}\r\n\r\nexport const PageTitle: FC<IProps> = ({ title }) => {\r\n    return <h3 className='page-title'>{title}</h3>;\r\n};\r\n","import { FC } from 'react';\r\nimport { Select as AntSelect, Tooltip } from 'antd';\r\nimport { SelectValue } from 'antd/lib/select';\r\n\r\nimport './Select.css';\r\nimport { Option as OptionModel } from '../../models/Option';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = AntSelect;\r\n\r\ninterface Props {\r\n    options: OptionModel[];\r\n    onChange?: (value: SelectValue) => void;\r\n    value?: SelectValue;\r\n    placeholder?: string;\r\n    label?: string;\r\n    mode?: 'multiple' | 'tags';\r\n    disabled?: boolean;\r\n    infoText?: string;\r\n    removeClear?: boolean;\r\n}\r\n\r\nexport const Select: FC<Props> = ({\r\n    options,\r\n    onChange,\r\n    value,\r\n    placeholder,\r\n    label,\r\n    mode,\r\n    disabled,\r\n    infoText,\r\n    removeClear,\r\n}) => {\r\n    return (\r\n        <div className=\"single-select__wrapper\">\r\n            <div className=\"info-text-wrapper\">\r\n                <label className=\"single-select__label\">{label}</label>\r\n                {infoText && (\r\n                    <Tooltip title={infoText}>\r\n                        <InfoCircleOutlined />\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n            <AntSelect\r\n                className=\"single-select__select\"\r\n                onChange={onChange}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                allowClear={!removeClear}\r\n                mode={mode}\r\n                disabled={disabled}\r\n            >\r\n                {options.map(({ label, value }) => {\r\n                    return (\r\n                        <Option key={value} value={value}>\r\n                            {label}\r\n                        </Option>\r\n                    );\r\n                })}\r\n            </AntSelect>\r\n        </div>\r\n    );\r\n};\r\n","import { Col } from 'antd';\r\nimport { FC } from 'react';\r\n\r\nexport const FormCol: FC = ({ children }) => {\r\n    return (\r\n        <Col xl={12} lg={12} sm={24} xs={24}>\r\n            {children}\r\n        </Col>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport './ProfileInfoItem.css';\r\n\r\nexport const ProfileInfoItem: FC = ({ children }) => {\r\n    return <div className=\"profile-info-item\">{children}</div>;\r\n};\r\n","import { Col } from 'antd';\r\nimport { FC } from 'react';\r\n\r\nexport const FormCol2: FC = ({ children }) => {\r\n    return (\r\n        <Col xl={8} lg={8} sm={12} xs={24}>\r\n            {children}\r\n        </Col>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card: FC = ({ children }) => {\r\n    return <div className=\"card\">{children}</div>;\r\n};\r\n","import { FC } from 'react';\r\nimport './Image.css';\r\n\r\ninterface IProps {\r\n    src: string;\r\n}\r\nexport const Image: FC<IProps> = ({ src }) => {\r\n    return (\r\n        <div className=\"single-image\">\r\n            <img src={src} alt=\"single\" />\r\n        </div>\r\n    );\r\n};\r\n","import './BasicProfileInfo.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getImage } from '../../utils/getImage';\r\nimport { Clock, ExternalLink, MapPin, Phone, Printer } from 'react-feather';\r\nimport { Image } from '../image';\r\nimport { FC } from 'react';\r\nimport { ProfileInfoItem } from '../profile-info-item';\r\nimport { ImgJpg } from '../../assets';\r\n\r\nconst buildName = (name: string | null, first: string | null, last: string | null): string | null => {\r\n    if (!!name) {\r\n        return name;\r\n    }\r\n    const arr: string[] = [];\r\n    if (!!first) {\r\n        arr.push(first);\r\n    }\r\n    if (!!last) {\r\n        arr.push(last);\r\n    }\r\n    if (arr.length !== 0) {\r\n        return arr.join(' ');\r\n    }\r\n    return null;\r\n};\r\n\r\nconst buildLocation = (\r\n    country: string | null,\r\n    city: string | null\r\n): { url: string | null; label: string | null } | null => {\r\n    let placeLink = null;\r\n    if (!!city || !!country) {\r\n        placeLink = 'https://www.google.com/maps/place/';\r\n        if (!!city) {\r\n            if (!!country) {\r\n                placeLink += ',+ ' + country;\r\n            }\r\n        } else {\r\n            placeLink += country;\r\n        }\r\n    }\r\n\r\n    const arr: string[] = [];\r\n    let label = null;\r\n    if (!!country) {\r\n        arr.push(country);\r\n    }\r\n    if (!!city) {\r\n        arr.push(city);\r\n    }\r\n    if (arr.length !== 0) {\r\n        label = arr.join(', ');\r\n    }\r\n    if (!label && !placeLink) {\r\n        return null;\r\n    }\r\n    return { label, url: placeLink };\r\n};\r\n\r\nconst buildPhone = (mob: string | null, land: string | null): string | null => {\r\n    if (!mob && !land) {\r\n        return null;\r\n    }\r\n    const arr: string[] = [];\r\n    if (land) {\r\n        arr.push(land);\r\n    }\r\n    if (mob) {\r\n        arr.push(mob);\r\n    }\r\n    if (arr.length !== 0) {\r\n        return arr.join(', ');\r\n    }\r\n    return null;\r\n};\r\n\r\nconst buildMemberSince = (\r\n    member_since_formatted: string | null,\r\n    create_date_formatted: string | null\r\n): string | null => {\r\n    if (member_since_formatted) {\r\n        return member_since_formatted;\r\n    }\r\n    if (create_date_formatted) {\r\n        return create_date_formatted;\r\n    }\r\n    return null;\r\n};\r\n\r\ninterface IProps {\r\n    privacyData: any;\r\n    name: string | null;\r\n    profile_image: string | null;\r\n    country_name: string | null;\r\n    city: string | null;\r\n    phone_number: string | null;\r\n    mobile_number: string | null;\r\n    first_name: string | null;\r\n    last_name: string | null;\r\n    nickname: string | null;\r\n    fax_number: string | null;\r\n    website: string | null;\r\n    member_since_formatted: string | null;\r\n    create_date_formatted: string | null;\r\n}\r\n\r\nexport const BasicProfileInfo: FC<IProps> = ({\r\n    privacyData,\r\n    name,\r\n    profile_image,\r\n    country_name,\r\n    city,\r\n    phone_number,\r\n    mobile_number,\r\n    first_name,\r\n    last_name,\r\n    nickname,\r\n    fax_number,\r\n    website,\r\n    member_since_formatted,\r\n    create_date_formatted,\r\n}) => {\r\n    const [t] = useTranslation();\r\n    const { name_public, address_public, phone_public, website_public } = privacyData;\r\n\r\n    const imageUrl = profile_image ? getImage(profile_image) : ImgJpg;\r\n    const userLocation = buildLocation(country_name, city);\r\n    const phone = buildPhone(phone_number, mobile_number);\r\n    const memberSince = buildMemberSince(member_since_formatted, create_date_formatted);\r\n\r\n    return (\r\n        <div className=\"basic-profile-info\">\r\n            <Image src={imageUrl} />\r\n            <div>\r\n                {name_public && <div className=\"profile-name\">{buildName(name, first_name, last_name)}</div>}\r\n                {nickname && <div className=\"profile-name profile-name__nickname\">{nickname}</div>}\r\n            </div>\r\n            <div className=\"profile-divider\" />\r\n            {address_public && userLocation && (\r\n                <ProfileInfoItem>\r\n                    {userLocation.url && (\r\n                        <a\r\n                            href={userLocation.url}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"profile-location\"\r\n                        >\r\n                            <MapPin size={15} />\r\n                            {userLocation.label && <span className=\"profile-location-label\">{userLocation.label}</span>}\r\n                        </a>\r\n                    )}\r\n                </ProfileInfoItem>\r\n            )}\r\n            {phone_public && phone && (\r\n                <ProfileInfoItem>\r\n                    <div className=\"profile-info-data\">\r\n                        <Phone size={15} />\r\n                        <span className=\"profile-info-label\">{phone}</span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n            )}\r\n            {phone_public && fax_number && (\r\n                <ProfileInfoItem>\r\n                    <div className=\"profile-info-data\">\r\n                        <Printer size={15} />\r\n                        <span className=\"profile-info-label\">{fax_number}</span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n            )}\r\n            {website_public && website && (\r\n                <ProfileInfoItem>\r\n                    <div className=\"profile-info-data\">\r\n                        <ExternalLink size={15} />\r\n                        <span className=\"profile-info-label\">{website}</span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n            )}\r\n            {memberSince && (\r\n                <ProfileInfoItem>\r\n                    <div className=\"profile-info-data\">\r\n                        <Clock size={15} />\r\n                        <span className=\"profile-info-label\">\r\n                            {t('lblMemberSince')}: {memberSince}\r\n                        </span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import { Form, Row } from 'antd';\r\nimport { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { Input } from '../input';\r\nimport { Select } from '../select';\r\nimport { FormCol } from './FormCol';\r\n\r\nconst { Item } = Form;\r\n\r\nexport const AccountData: FC = () => {\r\n    const [t] = useTranslation();\r\n    const countries = useAppSelector((state) => state.countries.list);\r\n    const countryOptions = countries.map(({ id, name }) => ({ value: id.toString(), label: name }));\r\n\r\n    const languages = useAppSelector((state) => state.languages.list);\r\n    const languageOptions = languages.map(({ id, name }) => ({ value: id.toString(), label: name }));\r\n\r\n    const currencies = useAppSelector((state) => state.currencies.list);\r\n    const currencyOptions = currencies.map(({ id, name }) => ({ value: id.toString(), label: name }));\r\n\r\n    const timezones = useAppSelector((state) => state.timezones.list);\r\n    const timezoneOptions = timezones.map(({ id, name }) => ({ value: id.toString(), label: name }));\r\n    return (\r\n        <>\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol>\r\n                    <Item name=\"nickname\">\r\n                        <Input label={t('lblUserId')} disabled />\r\n                    </Item>\r\n                </FormCol>\r\n            </Row>\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol>\r\n                    <Item name=\"email\">\r\n                        <Input label={t('lblEmail')} disabled />\r\n                    </Item>\r\n                </FormCol>\r\n            </Row>\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol>\r\n                    <Item name=\"first_name\">\r\n                        <Input label={t('lblFirstName')} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"last_name\">\r\n                        <Input label={t('lblLastName')} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"country\">\r\n                        <Select\r\n                            label={t('lblCountry')}\r\n                            options={countryOptions}\r\n                            infoText={t('lblCountryAdditionalInfo')}\r\n                        />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"language\">\r\n                        <Select label={t('lblLanguage')} options={languageOptions} removeClear />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"currency\">\r\n                        <Select label={t('lblCurrency')} options={currencyOptions} removeClear />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"timezone\">\r\n                        <Select\r\n                            label={t('lblTimeZone')}\r\n                            options={timezoneOptions}\r\n                            infoText={t('lblTimezoneAdditionalInfo')}\r\n                        />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"user_type_name\">\r\n                        <Input label={t('lblUserType')} disabled />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"user_status_name\">\r\n                        <Input label={t('lblUserStatus')} disabled />\r\n                    </Item>\r\n                </FormCol>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n","import { Form, Radio, Row } from 'antd';\r\nimport { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Input } from '../input';\r\nimport { Select } from '../select';\r\nimport { FormCol } from './FormCol';\r\nimport { FormCol2 } from './FormCol2';\r\n\r\nconst { Item } = Form;\r\n\r\nexport const PersonalData: FC = () => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol>\r\n                    <Item name=\"address\">\r\n                        <Input label={t('lblAddress')} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"address_2\">\r\n                        <Input label={t('lblAddress') + ' ' + 2} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"post_code\">\r\n                        <Input label={t('lblPostcode')} />\r\n                    </Item>\r\n                </FormCol>\r\n                <FormCol>\r\n                    <Item name=\"city\">\r\n                        <Input label={t('lblCity')} infoText={t('lblCityAdditionalInfo')} />\r\n                    </Item>\r\n                </FormCol>\r\n            </Row>\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol2>\r\n                    <Item name=\"mobile_number\">\r\n                        <Input label={t('lblMobileTelephoneNumber')} />\r\n                    </Item>\r\n                </FormCol2>\r\n                <FormCol2>\r\n                    <Item name=\"phone_number\">\r\n                        <Input label={t('lblLandlineTelephoneNumber')} />\r\n                    </Item>\r\n                </FormCol2>\r\n                <FormCol2>\r\n                    <Item name=\"fax_number\">\r\n                        <Input label={t('lblFaxNumber')} />\r\n                    </Item>\r\n                </FormCol2>\r\n            </Row>{' '}\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol2>\r\n                    <Item name=\"website\">\r\n                        <Input label={t('lblWebsite')} />\r\n                    </Item>\r\n                </FormCol2>\r\n            </Row>{' '}\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol2>\r\n                    <Item name=\"gender\">\r\n                        <Select\r\n                            label={t('lblGender')}\r\n                            options={[\r\n                                { label: t('lblMale'), value: '1' },\r\n                                { label: t('lblFemale'), value: '2' },\r\n                            ]}\r\n                        />\r\n                    </Item>\r\n                </FormCol2>\r\n            </Row>{' '}\r\n            <Row gutter={[30, 0]}>\r\n                <FormCol2>\r\n                    <div>{t('lblUnitSystem')}</div>\r\n                    <Item name=\"metric_system\">\r\n                        <Radio.Group>\r\n                            <Radio value=\"1\">{t('lblMetricSystem')}</Radio>\r\n                            <Radio value=\"2\">{t('lblImperialSystem')}</Radio>\r\n                        </Radio.Group>\r\n                    </Item>\r\n                </FormCol2>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n","import { Col, Row, Form, Checkbox } from 'antd';\r\nimport { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './Security.css';\r\n\r\nconst { Item } = Form;\r\n\r\nexport const SecurityPrivacy: FC = () => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={24}>\r\n                <Item name=\"name_public\" valuePropName=\"checked\" className=\"no-gap\">\r\n                    <Checkbox>{t('lblShowNamePublic')}</Checkbox>\r\n                </Item>\r\n            </Col>\r\n            <Col span={24}>\r\n                <Item name=\"address_public\" valuePropName=\"checked\" className=\"no-gap\">\r\n                    <Checkbox>{t('lblShowAddressOrProfile')}</Checkbox>\r\n                </Item>\r\n            </Col>\r\n            <Col span={24}>\r\n                <Item name=\"phone_public\" valuePropName=\"checked\" className=\"no-gap\">\r\n                    <Checkbox>{t('lblMobilePhoneVisible')}</Checkbox>\r\n                </Item>\r\n            </Col>\r\n            <Col span={24}>\r\n                <Item name=\"website_public\" valuePropName=\"checked\" className=\"no-gap\">\r\n                    <Checkbox>{t('lblWebsiteVisible')}</Checkbox>\r\n                </Item>\r\n            </Col>\r\n            <Col span={24}>\r\n                <Item name=\"expired_items_notifications\" valuePropName=\"checked\" className=\"no-gap\">\r\n                    <Checkbox>{t('lblNotificationsExpiredItems')}</Checkbox>\r\n                </Item>\r\n            </Col>\r\n            <Col span={24}>\r\n                <Item name=\"contact_notifications\" valuePropName=\"checked\" className=\"no-gap\">\r\n                    <Checkbox>{t('lblNotificationsNewMessages')}</Checkbox>\r\n                </Item>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n","import { Form, Tabs } from 'antd';\r\nimport { FC, useCallback, useEffect, useState } from 'react';\r\nimport { List } from 'react-feather';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { updatePrivacy } from '../../api/privacy';\r\nimport { updateUser } from '../../api/user';\r\nimport { useAppDispatch } from '../../redux/hooks';\r\nimport { fetchUser } from '../../redux/reducers/userReducer';\r\nimport { PageTitle } from '../page-title/PageTitle';\r\nimport { AccountData } from './AccountData';\r\nimport { PersonalData } from './PersonalData';\r\n\r\nimport './ProfileForm.css';\r\nimport { SecurityPrivacy } from './SecurityPrivacy';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface IProps {\r\n    user: any;\r\n    privacyData: any;\r\n}\r\n\r\nexport const ProfileForm: FC<IProps> = ({ user, privacyData }) => {\r\n    const [t] = useTranslation();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [initVals, setInitValues] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        let data: any = {};\r\n        if (user.nickname) {\r\n            data.nickname = user.nickname;\r\n        }\r\n        if (user.email) {\r\n            data.email = user.email;\r\n        }\r\n        if (user.first_name) {\r\n            data.first_name = user.first_name;\r\n        }\r\n        if (user.last_name) {\r\n            data.last_name = user.last_name;\r\n        }\r\n        if (user.country) {\r\n            data.country = user.country.toString();\r\n        }\r\n        if (user.language) {\r\n            data.language = user.language.toString();\r\n        }\r\n        if (user.currency) {\r\n            data.currency = user.currency.toString();\r\n        }\r\n        if (user.timezone) {\r\n            data.timezone = user.timezone.toString();\r\n        }\r\n        if (user.user_type_name) {\r\n            data.user_type_name = user.user_type_name;\r\n        }\r\n        if (user.user_status_name) {\r\n            data.user_status_name = user.user_status_name;\r\n        }\r\n        if (user.address) {\r\n            data.address = user.address;\r\n        }\r\n        if (user.address_2) {\r\n            data.address_2 = user.address_2;\r\n        }\r\n        if (user.post_code) {\r\n            data.post_code = user.post_code;\r\n        }\r\n        if (user.city) {\r\n            data.city = user.city;\r\n        }\r\n        if (user.mobile_number) {\r\n            data.mobile_number = user.mobile_number;\r\n        }\r\n        if (user.phone_number) {\r\n            data.phone_number = user.phone_number;\r\n        }\r\n        if (user.fax_number) {\r\n            data.fax_number = user.fax_number;\r\n        }\r\n        if (user.website) {\r\n            data.website = user.website;\r\n        }\r\n        if (user.gender) {\r\n            data.gender = user.gender.toString();\r\n        }\r\n        if (user.metric_system) {\r\n            data.metric_system = '1';\r\n        } else {\r\n            data.metric_system = '2';\r\n        }\r\n\r\n        data.name_public = privacyData.name_public;\r\n        data.address_public = privacyData.address_public;\r\n        data.phone_public = privacyData.phone_public;\r\n        data.website_public = privacyData.website_public;\r\n        data.expired_items_notifications = privacyData.expired_items_notifications;\r\n        data.contact_notifications = privacyData.contact_notifications;\r\n\r\n        setInitValues(data);\r\n    }, [user, privacyData]);\r\n\r\n    const onFinish = useCallback(\r\n        async (values: any) => {\r\n            const accountData: any = { ...user };\r\n            if (values.nickname) {\r\n                accountData.nickname = values.nickname;\r\n            }\r\n            if (values.email) {\r\n                accountData.email = values.email;\r\n            }\r\n            if (values.first_name) {\r\n                accountData.first_name = values.first_name;\r\n            }\r\n            if (values.last_name) {\r\n                accountData.last_name = values.last_name;\r\n            }\r\n            if (values.country) {\r\n                accountData.country = parseInt(values.country);\r\n            }\r\n            if (values.language) {\r\n                accountData.language = parseInt(values.language);\r\n            }\r\n            if (values.currency) {\r\n                accountData.currency = parseInt(values.currency);\r\n            }\r\n            if (values.timezone) {\r\n                accountData.timezone = parseInt(values.timezone);\r\n            }\r\n            if (values.user_type_name) {\r\n                accountData.user_type_name = values.user_type_name;\r\n            }\r\n            if (values.user_status_name) {\r\n                accountData.user_status_name = values.user_status_name;\r\n            }\r\n            if (values.address) {\r\n                accountData.address = values.address;\r\n            }\r\n            if (values.address_2) {\r\n                accountData.address_2 = values.address_2;\r\n            }\r\n            if (values.post_code) {\r\n                accountData.post_code = values.post_code;\r\n            }\r\n            if (values.city) {\r\n                accountData.city = values.city;\r\n            }\r\n            if (values.mobile_number) {\r\n                accountData.mobile_number = values.mobile_number;\r\n            }\r\n            if (values.phone_number) {\r\n                accountData.phone_number = values.phone_number;\r\n            }\r\n            if (values.fax_number) {\r\n                accountData.fax_number = values.fax_number;\r\n            }\r\n            if (values.website) {\r\n                accountData.website = values.website;\r\n            }\r\n            if (values.gender) {\r\n                accountData.gender = parseInt(values.gender);\r\n            }\r\n            if (values.metric_system === '1') {\r\n                accountData.metric_system = true;\r\n            } else {\r\n                accountData.metric_system = false;\r\n            }\r\n\r\n            const privacyValues: any = { ...privacyData };\r\n            privacyValues.name_public = values.name_public;\r\n            privacyValues.address_public = values.address_public;\r\n            privacyValues.phone_public = values.phone_public;\r\n            privacyValues.website_public = values.website_public;\r\n            privacyValues.expired_items_notifications = values.expired_items_notifications;\r\n            privacyValues.contact_notifications = values.contact_notifications;\r\n\r\n            try {\r\n                await updateUser(accountData);\r\n                await updatePrivacy(privacyValues);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n            dispatch(fetchUser(user.id));\r\n        },\r\n        [dispatch, privacyData, user]\r\n    );\r\n\r\n    if (!initVals) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form name=\"profile-form\" initialValues={initVals} onFinish={onFinish}>\r\n                <div className=\"profile-form-header\">\r\n                    <PageTitle title={t('lblUserProfile')} />\r\n                    <button className=\"profile-form-more-button\">\r\n                        <List size={15} />\r\n                    </button>\r\n                </div>\r\n                <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n                    <TabPane key=\"1\" tab={t('lblAccountData')}>\r\n                        <AccountData />\r\n                    </TabPane>\r\n                    <TabPane key=\"2\" tab={t('lblPersonalData')}>\r\n                        <PersonalData />\r\n                    </TabPane>\r\n                    <TabPane key=\"3\" tab={t('lblSecurityPrivacy')}>\r\n                        <SecurityPrivacy />\r\n                    </TabPane>\r\n                </Tabs>\r\n                <button type=\"submit\" className=\"profile-save-button\">\r\n                    {t('lblSave')}\r\n                </button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport { Button, Modal as AntModal } from 'antd';\r\nimport './Modal.css';\r\n\r\ninterface IProps {\r\n    visible: boolean;\r\n    okProps: {\r\n        label: string;\r\n        handleOk: any;\r\n    };\r\n    cancelProps: {\r\n        label: string;\r\n        handleCancel: any;\r\n    };\r\n    title: string;\r\n}\r\n\r\nexport const Modal: FC<IProps> = ({ visible, okProps, cancelProps, title, children }) => {\r\n    return (\r\n        <AntModal\r\n            visible={visible}\r\n            title={title}\r\n            footer={[\r\n                <Button key=\"ok\" onClick={okProps.handleOk}>\r\n                    {okProps.label}\r\n                </Button>,\r\n\r\n                <Button key=\"cancel\" onClick={cancelProps.handleCancel}>\r\n                    {cancelProps.label}\r\n                </Button>,\r\n            ]}\r\n        >\r\n            {children}\r\n        </AntModal>\r\n    );\r\n};\r\n","import { Briefcase, Plus, Trash, Users } from 'react-feather';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\r\nimport { ProfileInfoItem } from '../profile-info-item';\r\nimport { deleteOrgAction, setActive as setActiveOrg } from '../../redux/reducers/organizationsReducer';\r\n\r\nimport './ProfileOrgs.css';\r\nimport { useCallback, useState } from 'react';\r\nimport { useAppHistory } from '../../utils/useAppHistory';\r\nimport { Modal } from '../modal';\r\n\r\nexport const ProfileOrgs = () => {\r\n    const [t] = useTranslation();\r\n    const dispatch = useAppDispatch();\r\n    const { goTo } = useAppHistory();\r\n    const { list, membership } = useAppSelector((state) => state.organizations);\r\n\r\n    const mappedOrgsList = list.map(({ name, id }) => ({ name, id }));\r\n    const mappedOrgsMems = membership.map(({ name, id }) => ({ name, id }));\r\n\r\n    const setActive = useCallback(\r\n        (id: string) => {\r\n            dispatch(setActiveOrg(id));\r\n            goTo('/', false, {});\r\n        },\r\n        [dispatch, goTo]\r\n    );\r\n\r\n    const [orgId, setOrgId] = useState<string | undefined>();\r\n\r\n    const deleteOrg = useCallback(\r\n        (id: string) => {\r\n            dispatch(deleteOrgAction(id));\r\n            setOrgId(undefined);\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile-orgs\">\r\n                <ProfileInfoItem>\r\n                    <div className=\"profile-orgs-title\">\r\n                        <Briefcase size={20} />\r\n                        <span>{t('lblOrganizations')}</span>\r\n                    </div>\r\n                </ProfileInfoItem>\r\n                <div className=\"profile-divider\" />\r\n                <div className=\"profile-orgs-list\">\r\n                    {mappedOrgsList.map(({ name, id }) => (\r\n                        <div key={id} className=\"profile-orgs-list-item\">\r\n                            <span>{name}</span>\r\n                            <div className=\"profile-orgs-list-item-buttons\">\r\n                                <span>\r\n                                    <Users size={15} onClick={() => setActive(id!)} />\r\n                                </span>\r\n                                <span>\r\n                                    <Trash\r\n                                        size={15}\r\n                                        onClick={() => {\r\n                                            setOrgId(id);\r\n                                        }}\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    {mappedOrgsMems.map(({ name, id }) => (\r\n                        <div key={id} className=\"profile-orgs-list-item\">\r\n                            <span>{name}</span>\r\n                            <div className=\"profile-orgs-list-item-buttons\">\r\n                                <span>\r\n                                    <Users size={15} onClick={() => setActive(id!)} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <div className=\"profile-orgs-add\">\r\n                        <button>\r\n                            <span>\r\n                                <Plus size={15} />\r\n                            </span>\r\n                            {t('lblAddOrganization')}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title={t('lblWarning')}\r\n                visible={!!orgId}\r\n                okProps={{\r\n                    label: t('lblYes'),\r\n                    handleOk: () => {\r\n                        deleteOrg(orgId!);\r\n                    },\r\n                }}\r\n                cancelProps={{\r\n                    label: t('lblNo'),\r\n                    handleCancel: () => {\r\n                        setOrgId(undefined);\r\n                    },\r\n                }}\r\n            >\r\n                <span>{t('lblDeleteOrganization')}</span>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","import { Col, Row } from 'antd';\r\nimport { FC, useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\r\nimport { fetchUser } from '../../redux/reducers/userReducer';\r\nimport { BasicProfileInfo } from '../basic-profile-info';\r\nimport { Card } from '../card';\r\nimport { ProfileForm } from '../profile-form';\r\nimport { ProfileOrgs } from '../profile-orgs';\r\n\r\nimport './Profile.css';\r\n\r\nexport const Profile: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const user = useAppSelector((state) => state.user.data);\r\n    const privacyData = useAppSelector((state) => state.user.privacy);\r\n    const shouldRefresh = useAppSelector((state) => state.languages.userProfileRefresh);\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) {\r\n            user?.id && dispatch(fetchUser(user.id));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [shouldRefresh]);\r\n\r\n    if (!user) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Row gutter={[20, 0]}>\r\n            <Col xl={6} lg={8} sm={8} xs={24}>\r\n                <Row gutter={[0, 20]}>\r\n                    <Col span={24}>\r\n                        <Card>\r\n                            <BasicProfileInfo\r\n                                privacyData={privacyData}\r\n                                city={user.city}\r\n                                country_name={user.country_name}\r\n                                create_date_formatted={user.create_date_formatted}\r\n                                fax_number={user.fax_number}\r\n                                first_name={user.first_name}\r\n                                last_name={user.last_name}\r\n                                member_since_formatted={user.member_since_formatted}\r\n                                mobile_number={user.mobile_number}\r\n                                name={user.name}\r\n                                nickname={user.nickname}\r\n                                phone_number={user.phone_number}\r\n                                profile_image={user.profile_image}\r\n                                website={user.website}\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Card>\r\n                            <ProfileOrgs />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col xl={18} lg={16} sm={16} xs={24}>\r\n                <Card>{!shouldRefresh && <ProfileForm user={user} privacyData={privacyData} />}</Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport { Profile } from '../../components/profile';\r\n\r\nimport './UserProfile.css';\r\n\r\nconst UserProfile: FC = () => {\r\n    return (\r\n        <div className=\"user-profile\">\r\n            <Profile />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"sourceRoot":""}