{"version":3,"sources":["api/itemMedia.ts","components/page-container/PageContainer.tsx","api/singleAd.ts","components/ad-details-icons/AdDetailsIcons.tsx","components/ad-details-price/AdDetailsPrice.tsx","components/image-gallery/ImageGallery.tsx","components/ad-details-details-container/AdDetailsDetailsContainer.tsx","pages/ad-details/AdDetails.tsx","pages/ad-details/useAdDetails.ts"],"names":["getItemMedia","itemId","a","ApiService","method","url","PageContainer","children","className","getSingleAd","adId","inputParams","extraHeaders","AdDetailsIcons","isFavorite","isLoggedIn","onFavoriteClick","userEmail","t","useTranslation","postToFacebookUrl","useMemo","siteUrl","window","location","href","encodedUrl","encodeURI","mailItemUrl","printItem","useCallback","print","onClick","title","target","rel","AdDetailsPrice","currency_name","price_formatted","converted_price_formatted","measurement_unit_name","cn","shouldDisplaySeparator","price_by_agreement","activeCurrency","ImageGallery","images","imagesForGallery","map","idx","imageUrl","thumbnailUrl","videoUrl","media_type","obj","original","thumbnail","description","comment","originalClass","thumbnailClass","width","height","src","frameBorder","allowFullScreen","customItemRender","items","showPlayButton","showBullets","showIndex","lazyLoad","count","AdDetailsDetailsContainer","attributes","getValueAndUnit","value_formatted","additional_measurement_units","metric_system","isMetricSystem","length","find","name","details","activeKey","reduce","memo","item","index","group_name","newItem","key","value","unit","push","useState","Set","detailGroupsClosed","setDetailGroupsClosed","toggleDetailGroup","detailGroupKey","prev","has","delete","add","Object","keys","detailGroup","isDetailGroupOpen","detail","idxD","TransformTrueFalseToIcons","size","AdDetails","useAppSelector","state","currencies","active","currencyList","list","languages","activeLanguage","id","code","setAdId","ad","setAd","activeCurrencyName","useEffect","path","pathname","split","startsWith","console","log","headers","iss_authentication_token","currency","response","data","error_id","mediaResponse","media","acc","video_code","newImage","image_height","image_width","default","unshift","fetchAd","userLink","owner","text","country_name","link","place","placeLink","placeText","modalOpen","setModalOpen","reportModalOpen","setReportModalOpen","userId","useAdDetails","listing_type_name","owner_nickname","expiry_date_formatted","change_date_formatted","create_date_formatted","view_count","owner_phone_number","owner_mobile_number","owner_name","show_number","HTMLReactParser","to"],"mappings":"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","file":"static/js/12.9a1b39da.chunk.js","sourcesContent":["import { ApiService } from '.';\n\nexport const getItemMedia = async (itemId: string) => {\n    return ApiService<any>({ method: 'GET', url: `/view/item_listing/${itemId}/media` });\n};\n","import { FC } from 'react';\n\nimport './PageContainer.css';\n\nexport const PageContainer: FC = ({ children }) => {\n    return <div className='page-container'>{children}</div>;\n};\n","import { ApiService } from '.';\n\nexport const getSingleAd = async (adId: string, inputParams: any, extraHeaders: any) => {\n    const url = `view/item_listing/${adId}`;\n    return ApiService<any>({ method: 'GET', url, inputParams, extraHeaders });\n};\n","import { FC, useCallback, useMemo } from 'react';\nimport { Facebook, Mail, Printer, Star } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport './AdDetailsIcons.css';\n\ninterface IProps {\n    isFavorite: boolean;\n    isLoggedIn: boolean;\n    className: string;\n    onFavoriteClick: () => void;\n    userEmail: string;\n}\n\nexport const AdDetailsIcons: FC<IProps> = ({ isFavorite, isLoggedIn, className, onFavoriteClick, userEmail }) => {\n    const { t } = useTranslation();\n    const postToFacebookUrl = useMemo(() => {\n        const siteUrl = window.location.href;\n        const encodedUrl = encodeURI(siteUrl);\n        const fbUrl = `https://facebook.com/sharer/sharer.php?u=${encodedUrl}`;\n        return fbUrl;\n    }, []);\n    const mailItemUrl = useMemo(() => {\n        const mailUrl = `mailto:${userEmail}`;\n        return mailUrl;\n    }, [userEmail]);\n    const printItem = useCallback(() => {\n        window.print();\n    }, []);\n    return (\n        <div className={className}>\n            {isLoggedIn && (\n                <span\n                    onClick={onFavoriteClick}\n                    title={isFavorite ? t('lblRemoveFromFavorites') : t('lblAddToFavorites')}\n                    className='ad-details-icon'\n                >\n                    <Star className={`ad-details-icon__svg ${isFavorite ? 'favorite' : ''}`} />\n                </span>\n            )}\n            <a href={postToFacebookUrl} target='_blank' rel='noopener noreferrer' className='ad-details-icon'>\n                <Facebook className='ad-details-icon__svg' />\n            </a>\n            <a href={mailItemUrl} target='_blank' rel='noopener noreferrer' className='ad-details-icon'>\n                <Mail className='ad-details-icon__svg' />\n            </a>\n            <span onClick={printItem} className='ad-details-icon'>\n                <Printer className='ad-details-icon__svg' />\n            </span>\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './AdDetailsPrice.css';\n\ninterface IProps {\n    currency_name: string;\n    price_formatted: string;\n    converted_price_formatted: string;\n    measurement_unit_name: string;\n    cn: string;\n    shouldDisplaySeparator: 'top' | 'bottom';\n    price_by_agreement: string;\n    activeCurrency: string;\n}\n\nexport const AdDetailsPrice: FC<IProps> = ({\n    currency_name,\n    price_formatted,\n    converted_price_formatted,\n    measurement_unit_name,\n    cn,\n    shouldDisplaySeparator,\n    price_by_agreement,\n    activeCurrency,\n}) => {\n    const { t } = useTranslation();\n    return (\n        <div className={cn}>\n            {shouldDisplaySeparator === 'top' && <div className='ad-details-price__horizontal-separator' />}\n            <h2>\n                <strong>\n                    {currency_name === activeCurrency\n                        ? price_formatted\n                        : !converted_price_formatted && !price_formatted\n                        ? null\n                        : `≈ ${converted_price_formatted}`}{' '}\n                    {!converted_price_formatted && !price_formatted\n                        ? !!price_by_agreement\n                            ? t('lblPriceByAgreement')\n                            : null\n                        : activeCurrency}\n                    {!!measurement_unit_name && '/'}\n                    {measurement_unit_name}\n                </strong>\n            </h2>\n            {currency_name !== activeCurrency && (\n                <span className='ad-details-price__segment-text'>\n                    {price_formatted} {currency_name}\n                    {!!measurement_unit_name && '/'}\n                    {measurement_unit_name}\n                </span>\n            )}\n            {shouldDisplaySeparator === 'bottom' && <div className='ad-details-price__horizontal-separator' />}\n        </div>\n    );\n};\n","import { FC, useMemo } from 'react';\nimport ReactImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\n\nimport './ImageGallery.css';\n\ninterface IProps {\n    images: any[];\n}\n\nconst customItemRender = (videoUrl: any, idx: any) => {\n    return (\n        <div className='video-wrapper'>\n            <iframe title={idx} width='560' height='315' src={videoUrl} frameBorder='0' allowFullScreen></iframe>\n        </div>\n    );\n};\n\nexport const ImageGallery: FC<IProps> = ({ images }) => {\n    const imagesForGallery = useMemo(\n        () =>\n            images.map(({ imageUrl, thumbnailUrl, videoUrl, media_type, comment }, idx) => {\n                const obj: any = {\n                    original: imageUrl,\n                    thumbnail: thumbnailUrl,\n                    description: comment,\n                    originalClass: 'image-gallery-original',\n                    thumbnailClass: 'image-gallery-thumbnail',\n                };\n                if (media_type === 1) {\n                    return obj;\n                }\n                obj['renderItem'] = () => customItemRender(videoUrl, idx);\n                return obj;\n            }),\n        [images],\n    );\n    return (\n        <div className='image-gallery-wrapper'>\n            <ReactImageGallery\n                items={imagesForGallery}\n                showPlayButton={false}\n                showBullets={true}\n                showIndex={true}\n                lazyLoad={true}\n            />\n        </div>\n    );\n};\n","import { FC, useCallback, useMemo, useState } from 'react';\nimport { Check, Minus, Plus, X } from 'react-feather';\n\nimport './AdDetailsDetailsContainer.css';\n\ninterface IProps {\n    attributes: any;\n}\n\nlet count = 0;\n\nexport const AdDetailsDetailsContainer: FC<IProps> = ({ attributes }) => {\n    const getValueAndUnit = useCallback(\n        (value_formatted, measurement_unit_name, additional_measurement_units, metric_system, isMetricSystem) => {\n            if (additional_measurement_units.length === 0) {\n                return [value_formatted, measurement_unit_name];\n            }\n            if (metric_system === isMetricSystem) {\n                return [value_formatted, measurement_unit_name];\n            }\n            const additionalMeasurementUnit = additional_measurement_units.find(\n                ({ metric_system }: any) => metric_system === isMetricSystem,\n            );\n            const { value_formatted: value_formatted2 = value_formatted, name } = additionalMeasurementUnit || {};\n            return [value_formatted2, name];\n        },\n        [],\n    );\n    const details = useMemo(() => {\n        const isMetricSystem = false;\n        let activeKey = '';\n        const detailsPerKey = attributes.reduce((memo: any, item: any, index: any) => {\n            const {\n                group_name,\n                name,\n                value_formatted,\n                measurement_unit_name,\n                additional_measurement_units,\n                metric_system,\n            } = item;\n            if (!memo[group_name]) {\n                memo[group_name] = [];\n            }\n            const [value, unit] = getValueAndUnit(\n                value_formatted,\n                measurement_unit_name,\n                additional_measurement_units,\n                metric_system,\n                isMetricSystem,\n            );\n            let newItem = {\n                key: name,\n                value: value,\n                unit: unit,\n            };\n            if (index === 0) {\n                activeKey = name;\n            }\n            if (index !== 0) {\n                if (name !== activeKey) {\n                    activeKey = name;\n                } else {\n                    newItem.key = '';\n                }\n            }\n            memo[group_name].push(newItem);\n            return memo;\n        }, {});\n        return detailsPerKey;\n    }, [attributes, getValueAndUnit]);\n    const [detailGroupsClosed, setDetailGroupsClosed] = useState<Set<any>>(new Set());\n    const toggleDetailGroup = useCallback((detailGroupKey) => {\n        setDetailGroupsClosed((prev) => {\n            if (prev.has(detailGroupKey)) {\n                prev.delete(detailGroupKey);\n            } else {\n                prev.add(detailGroupKey);\n            }\n            return prev;\n        });\n    }, []);\n    return (\n        <div className='ad-details__details-info-container'>\n            {Object.keys(details).map((detailGroupKey, idx) => {\n                const detailGroup = details[detailGroupKey];\n                const isDetailGroupOpen = !detailGroupsClosed.has(detailGroupKey);\n                count++;\n\n                return (\n                    <div key={idx} className='ad-details__details-info-group-container'>\n                        <div\n                            className={`ad-details__details-info-group-title-container ${\n                                count % 2 === 1 ? 'ad-details__details-info-group-item-white' : ''\n                            }`}\n                            onClick={() => toggleDetailGroup(detailGroupKey)}\n                        >\n                            <div>\n                                {isDetailGroupOpen ? (\n                                    <Minus className='ad-details__details-info-group-title-container-icon' />\n                                ) : (\n                                    <Plus className='ad-details__details-info-group-title-container-icon' />\n                                )}\n                            </div>\n                            <div>\n                                <strong>{detailGroupKey}</strong>\n                            </div>\n                        </div>\n                        {isDetailGroupOpen && (\n                            <div className='ad-details__details-info-group-info-container'>\n                                {detailGroup.map((detail: any, idxD: any) => {\n                                    count++;\n                                    const { key, value, unit } = detail;\n                                    return (\n                                        <div\n                                            key={idx}\n                                            className={`ad-details__details-info-group-info-item ${\n                                                count % 2 === 1 ? 'ad-details__details-info-group-item-white' : ''\n                                            }`}\n                                        >\n                                            <div className='ad-details__details-info-group-key'>\n                                                {key}\n                                                {key !== '' ? ':' : ''}\n                                            </div>\n                                            <div className='ad-details__details-info-group-value'>\n                                                <strong>\n                                                    <TransformTrueFalseToIcons value={value} /> {unit}\n                                                </strong>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        )}\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nconst TransformTrueFalseToIcons: FC<any> = ({ value }) => {\n    switch (value) {\n        case 'True':\n            return <Check size={15} />;\n        case 'False':\n            return <X size={15} />;\n        default:\n            return value;\n    }\n};\n","import { FC } from 'react';\nimport { PageContainer } from '../../components/page-container';\nimport { useAdDetails } from './useAdDetails';\n\nimport { AdDetailsIcons } from '../../components/ad-details-icons';\n\nimport './AdDetails.css';\nimport { AdDetailsPrice } from '../../components/ad-details-price';\nimport { ImageGallery } from '../../components/image-gallery';\nimport HTMLReactParser from 'html-react-parser';\nimport { AdDetailsDetailsContainer } from '../../components/ad-details-details-container';\nimport { Mail, MapPin, Phone } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nconst AdDetails: FC = () => {\n    const { t } = useTranslation();\n    const {\n        ad,\n        isFavorite,\n        isLoggedIn,\n        onFavoriteClick,\n        activeCurrencyName,\n        userLink,\n        placeLink,\n        placeText,\n        userId,\n        // modalOpen,\n        setModalOpen,\n        // reportModalOpen,\n        setReportModalOpen,\n    } = useAdDetails();\n    if (!ad) {\n        return null;\n    }\n    const { item, media } = ad;\n    const {\n        listing_type_name,\n        title,\n        description,\n        attributes,\n        price_formatted,\n        currency_name,\n        converted_price_formatted,\n        owner_nickname,\n        expiry_date_formatted,\n        change_date_formatted,\n        create_date_formatted,\n        view_count,\n        owner_phone_number,\n        owner_mobile_number,\n        owner,\n        measurement_unit_name,\n        price_by_agreement,\n        owner_name,\n    } = item;\n    const show_number = owner_mobile_number || owner_phone_number;\n    return (\n        <>\n            <PageContainer>\n                <div className=\"ad-details\">\n                    <div className=\"ad-details__header\">\n                        <span className=\"ad-details__header-title\">\n                            <strong>{listing_type_name}</strong>: {title}\n                        </span>\n                        <AdDetailsIcons\n                            isFavorite={isFavorite}\n                            isLoggedIn={isLoggedIn}\n                            className=\"ad-details-icon-wrapper-desktop\"\n                            onFavoriteClick={onFavoriteClick}\n                            userEmail=\"test@tset.test\"\n                        />\n                    </div>\n                    <AdDetailsPrice\n                        currency_name={currency_name}\n                        price_formatted={price_formatted}\n                        converted_price_formatted={converted_price_formatted}\n                        measurement_unit_name={measurement_unit_name}\n                        cn=\"ad-details-price__mobile\"\n                        shouldDisplaySeparator={'top'}\n                        price_by_agreement={price_by_agreement}\n                        activeCurrency={activeCurrencyName}\n                    />\n                    <div className=\"ad-details__main\">\n                        <div className=\"ad-details__main-info\">\n                            <div className=\"ad-details__main-swiper\">\n                                {media.length !== 0 && <ImageGallery images={media} />}\n                            </div>\n                            <span className=\"ad-details__section-label\">\n                                <strong>{t('lblDescription')}</strong>\n                            </span>\n                            <div className=\"ad-details-price__horizontal-separator \" />\n                            <span className=\"ad-details__section-text\">{HTMLReactParser(description)}</span>\n                            <span className=\"ad-details__section-label\">\n                                <strong>{t('lblDetails')}</strong>\n                            </span>\n                            <div className=\"ad-details-price__horizontal-separator \" />\n                            <AdDetailsDetailsContainer attributes={attributes} />\n                            <div className=\"ad-details-price__horizontal-separator \" />\n                        </div>\n                        <div className=\"ad-details__empty-segment\" />\n                        <div className=\"ad-details__price-segment\">\n                            <AdDetailsPrice\n                                currency_name={currency_name}\n                                price_formatted={price_formatted}\n                                converted_price_formatted={converted_price_formatted}\n                                measurement_unit_name={measurement_unit_name}\n                                cn=\"ad-details-price\"\n                                shouldDisplaySeparator={'bottom'}\n                                price_by_agreement={price_by_agreement}\n                                activeCurrency={activeCurrencyName}\n                            />\n                            <span className=\"ad-details-price__segment-text\">\n                                {t('lblPostedBy')}:{' '}\n                                <Link to={userLink}>\n                                    {owner_nickname}\n                                    {owner_name !== null ? ` (${owner_name})` : ''}\n                                </Link>\n                            </span>\n                            <a\n                                href={placeLink}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"ad-details__segmnet-link\"\n                            >\n                                <MapPin size={15} className=\"ad-details__mappin\" />\n                                <span className=\"ad-details__segmnet-link-text\">{placeText}</span>\n                            </a>\n                            <span className=\"ad-details-price__segment-text\">\n                                {t('lblValidTo')}: {expiry_date_formatted}\n                            </span>\n                            <div className=\"ad-details-price__horizontal-separator \" />\n                            <div className=\"ad-details__contact-container\">\n                                {isLoggedIn && userId !== owner && (\n                                    <div className=\"ad-details__phone-button\" onClick={() => setModalOpen(true)}>\n                                        <Mail />\n                                        {t('lblContactOwner')}\n                                    </div>\n                                )}\n                                {show_number && (\n                                    <div>\n                                        <a href={`tel:${show_number}`} className=\"ad-details__phone-button\">\n                                            <Phone />\n                                            {show_number}\n                                        </a>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                    <AdDetailsIcons\n                        isFavorite={isFavorite}\n                        isLoggedIn={isLoggedIn}\n                        className=\"ad-details-icon-wrapper-mobile\"\n                        onFavoriteClick={onFavoriteClick}\n                        userEmail=\"test@tset.test\"\n                    />\n                    <div className=\"ad-details__footer\">\n                        <span onClick={() => setReportModalOpen(true)} className=\"ad-details__footer-text report-item\">\n                            {t('lblReportItem')}\n                        </span>\n                        <span className=\"ad-details__footer-text\">\n                            {t('lblCreated')}: <strong>{create_date_formatted}</strong>, {t('lblChanged')}:{' '}\n                            <strong>{change_date_formatted}</strong>, {t('lblViews')}: <strong>{view_count}</strong>\n                        </span>\n                    </div>\n                </div>\n            </PageContainer>\n        </>\n    );\n};\n\nexport default AdDetails;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { getItemMedia } from '../../api/itemMedia';\nimport { getSingleAd } from '../../api/singleAd';\nimport { useAppSelector } from '../../redux/hooks';\n\nexport const useAdDetails = () => {\n    const { active: activeCurrency, list: currencyList } = useAppSelector((state) => state.currencies);\n    const { active, list } = useAppSelector((state) => state.languages);\n    const activeLanguage = useMemo(() => list.find(({ id }) => id === active)?.code, [active, list]);\n    const [adId, setAdId] = useState<string | undefined>();\n    const [ad, setAd] = useState<any>();\n\n    const activeCurrencyName = currencyList.find(({ id }) => id === activeCurrency)!.name;\n\n    useEffect(() => {\n        try {\n            const path = window.location.pathname;\n            const id = path.split('/')[path.startsWith('/vevergo') ? 3 : 2];\n            setAdId(id);\n        } catch {\n            console.log('error');\n        }\n    }, []);\n\n    useEffect(() => {\n        const fetchAd = async (id: string) => {\n            const headers: any = {\n                iss_authentication_token: null,\n            };\n            if (activeLanguage) {\n                headers['accept-language'] = activeLanguage;\n            }\n            const response = await getSingleAd(id, { currency: activeCurrency }, headers);\n            if (response?.data?.error_id !== 0) {\n                // TODO\n                window.location.href = '/';\n            }\n            const item = response.data.items[0];\n\n            const mediaResponse = await getItemMedia(id);\n\n            const media = mediaResponse.data.items.reduce((acc: any[], item: any) => {\n                const { id, comment, media_type, video_code, image_height, image_width, default: defaultImage } = item;\n                const newImage = {\n                    comment,\n                    media_type,\n                    image_height,\n                    image_width,\n                    imageUrl:\n                        media_type === 1\n                            ? 'https://api.vevergo.com:4443/item_images/' + id + '.jpeg'\n                            : 'https://img.youtube.com/vi/' + video_code + '/maxresdefault.jpg',\n                    videoUrl: media_type === 2 ? 'https://www.youtube.com/embed/' + video_code : null,\n                    thumbnailUrl:\n                        media_type === 1\n                            ? 'https://api.vevergo.com:4443/item_adjusted_images/' + id + '.jpeg'\n                            : 'https://img.youtube.com/vi/' + video_code + '/maxresdefault.jpg',\n                };\n                if (defaultImage) {\n                    acc.unshift(newImage);\n                } else {\n                    acc.push(newImage);\n                }\n                return acc;\n            }, []);\n            const ad = {\n                item,\n                media,\n            };\n            setAd(ad);\n        };\n\n        if (adId) {\n            fetchAd(adId);\n        }\n    }, [adId, activeLanguage, activeCurrency]);\n\n    const isFavorite = useMemo(() => false, []);\n    const isLoggedIn = useMemo(() => false, []);\n\n    const onFavoriteClick = useCallback(() => {}, []);\n\n    const userId = '1';\n    const userLink = useMemo(\n        () => (userId === ad?.item?.owner ? '/my-items' : `/profile/${ad?.item?.owner}/items`),\n        [ad?.item?.owner]\n    );\n\n    const { placeLink, placeText } = useMemo(() => {\n        let text = ad?.item?.country_name ?? '';\n        let link = 'https://www.google.com/maps/place/';\n        if (!!ad?.item?.place) {\n            link += ad?.item?.place + ',+ ' + ad?.item?.country_name;\n            text += ', ' + ad?.item?.place;\n        } else {\n            link += ad?.item?.country_name;\n        }\n        return {\n            placeLink: link,\n            placeText: text,\n        };\n    }, [ad?.item?.country_name, ad?.item?.place]);\n\n    const [modalOpen, setModalOpen] = useState<boolean>(false);\n\n    const [reportModalOpen, setReportModalOpen] = useState<boolean>(false);\n\n    return {\n        ad,\n        isFavorite,\n        isLoggedIn,\n        onFavoriteClick,\n        activeCurrencyName,\n        userLink,\n        placeLink,\n        placeText,\n        userId,\n        modalOpen,\n        setModalOpen,\n        reportModalOpen,\n        setReportModalOpen,\n    };\n};\n"],"sourceRoot":""}