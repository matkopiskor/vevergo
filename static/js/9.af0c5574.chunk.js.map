{"version":3,"sources":["components/input/Input.tsx","components/select/Select.tsx","api/itemMedia.ts","utils/findSelectedIds.ts","utils/findSelectedNames.ts","components/breadcrumbs/Breadcrumbs.tsx","components/breadcrumbs/useBreadcrumbs.ts","modals/components/section/ModalSection.tsx","components/slider/Slider.tsx","components/switch/Switch.tsx","components/category-filters/CFForm.tsx","api/categoryAttributes.ts","api/categoryMeasurementUnits.ts","components/category-filters/useCategoryFilters.ts","components/category-filters/CategoryFilters.tsx","components/change-list-grid-view/ChangeListGridView.tsx","components/change-list-grid-view/useChangeListGridView.ts","utils/findUrlCategories.ts","utils/createAdUrl.ts","utils/prepareCategoriesForUrl.ts","components/grid-item/useGridItem.ts","utils/createImageUrlByMediaType.ts","components/content-image-view/useContentImageView.ts","utils/createImageUrl.ts","components/content-image-view/ContentImageView.tsx","components/grid-item/GridItem.tsx","components/grid-items/GridItems.tsx","components/list-item/useListItem.ts","components/list-item/ListItem.tsx","components/list-items/ListItems.tsx","components/category-icon/CategoryIcon.tsx","components/sidebar/Sidebar.tsx","components/sidebar/useSidebar.ts","constants/sortByOptions.ts","components/sort-by/SortBy.tsx","components/sort-by/useSortBy.ts","api/mainPageItems.ts","pages/home/Home.tsx","pages/home/useHome.ts"],"names":["Input","props","label","onChange","value","placeholder","type","name","labelClassName","inputClassName","Prefix","disabled","infoText","required","className","title","InfoCircleOutlined","prefix","Option","AntSelect","Select","options","mode","removeClear","allowClear","map","getItemMedia","itemId","a","ApiService","method","url","findSelectedIds","data","target","memo","recr","item","id","children","push","flag","forEach","c","reverse","findSelectedNames","Breadcrumbs","useAppHistory","goTo","state","path","categoryTree","useAppSelector","tree","sidebarFilters","onBreadcrumbClick","useCallback","selectedIds","breadcrumbs","useMemo","length","names","idx","useBreadcrumbs","src","style","display","alignItems","onClick","size","Panel","Collapse","ModalSection","defaultOpen","defaultActiveKey","ghost","header","Slider","min","max","suffix","tooltipVisible","Switch","checked","FormCol","xl","lg","sm","xs","Item","Form","CFForm","open","applyFilters","setOpen","activeAttributes","initialValues","useForm","form","listingTypes","list","listingTypesOptions","toString","countries","countryOptions","useState","fromToError","setFromToError","onValuesChange","values","allValues","price_from","price_to","visible","onOk","getFieldsValue","onCancel","width","gutter","span","validateStatus","undefined","Object","keys","key","attr","items","dataType","e","attributeId","filterMaximum","filterStep","i","Number","filterMinimum","measurementUnits","val","getCategoryAttributes","category","getCategoryMeasurementUnits","useCategoryFilters","setActiveAttributes","activeCategory","commonFilters","filters","include_items_without_price","owner_type","include_items_with_media","useEffect","categoryAttributes","attributes","attrs","reduce","index","console","log","attribute_id","childAttributeId","child_attribute_id","parentAttributeId","parent_attribute_id","filter_minimum","filter_maximum","filter_step","data_type","measurement_units","elem","measurement_unit_id","default","attribute_values","attribute_value_id","group_id","group_name","fetch","categoryMeasurementUnitOptions","setCategoryMeasurementUnitOptions","response","units","commonFiltersData","listing_type","country","place","parseCommonFilters","CategoryFilters","ChangeListGridView","dispatch","useAppDispatch","view","homeView","active","setActiveView","setActive","useChangeListGridView","findUrlCategories","createAdUrl","categories","preparedCategories","toLowerCase","trim","split","join","prepareCategoriesForUrl","encodedTitle","encodeURI","replaceAll","createPriorityAttributesStr","attribute","value_formatted","measurement_unit_name","additional_measurement_units","getValueAndUnit","unit","s","isMetricSystem","find","metric_system","createDescription","description","container","document","createElement","innerHTML","elements","childNodes","textElements","element","text","tagName","innerElements","innerTextElements","innerElement","innerText","textContent","createImageUrlByMediaType","mediaType","videoCode","imageBaseUrl","useContentImageView","defaultImage","defaultImgUrl","ImgJpg","createImageUrl","alt","availableImages","setAvailableImages","error_id","images","defaultImg","media_type","video_code","getMedia","ContentImageView","MultiImageView","currentIdx","setCurrentIdx","setClassName","onNext","nextIdx","onPrev","prevIdx","useMultiImageView","preventDefault","userCurrencyName","GridItem","t","useTranslation","country_name","listing_type_name","default_image","currency_name","price_formatted","converted_price_formatted","price_by_agreement","owner_nickname","owner_name","create_date_formatted","view_count","adUrl","placeText","filter","Boolean","priorityAttributes","itemDescription","trimmedItemDescription","substring","useGridItem","to","GridItems","ListItem","useListItem","ListItems","CategoryIcon","iconSize","itemIcon","Sidebar","isMobile","useIsMobile","sidebarState","sidebar","mobileOpen","appliedFilters","setMobileOpen","selected","setSelected","docked","onDockedClick","toggleDocked","onSidebarMouseEnter","onSidebarMouseLeave","sidebarClassName","createSidebarItem","icon","is_last","child","includes","sidebarTree","onItemClick","obj","acc","sId","isFound","sIds","onFilterClick","onSwipe","toggleMobileOpen","isHome","body","overflow","useSidebar","onMouseEnter","onMouseLeave","first","SidebarItem","sortByOptions","orderType","orderItem","SortBy","sortValueId","sortValue","currRef","useRef","toggleOpen","forceClose","setActiveSort","sortBy","useOutsideClickListener","setSort","useSortBy","ref","stopPropagation","OpenArrow","ClosedArrow","getMainPageItems","params","start","searchText","currency","extraHeaders","getAcceptLanguageHeaders","inputParams","Home","mainPageFilter","activeView","currencies","setStart","setItems","totalCount","setTotalCount","cf","getNextItems","elems","concat","error","total","total_count","getItems","homeClassName","useHome","dataLength","next","hasMore","loader"],"mappings":"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","file":"static/js/9.af0c5574.chunk.js","sourcesContent":["import { ChangeEventHandler, FC } from 'react';\nimport { Input as AntInput, Tooltip } from 'antd';\n\nimport './Input.css';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\ninterface Props {\n    label?: string;\n    onChange?: ChangeEventHandler<HTMLInputElement>;\n    value?: string | number | undefined;\n    placeholder?: string;\n    type?: string;\n    name?: string;\n    labelClassName?: string;\n    inputClassName?: string;\n    Prefix?: JSX.Element;\n    disabled?: boolean;\n    infoText?: string;\n    required?: boolean;\n}\n\nexport const Input: FC<Props> = (props) => {\n    const {\n        label,\n        onChange,\n        value,\n        placeholder,\n        type = 'text',\n        name,\n        labelClassName = '',\n        inputClassName = '',\n        Prefix,\n        disabled,\n        infoText,\n        required,\n    } = props;\n    return (\n        <div className=\"input__wrapper\">\n            <div className=\"info-text-wrapper\">\n                <div>\n                    <label className={`input__label ${labelClassName}`}>{label}</label>\n                    {required && <span className=\"input__label-required\">*</span>}\n                </div>\n                {infoText && (\n                    <Tooltip title={infoText}>\n                        <InfoCircleOutlined />\n                    </Tooltip>\n                )}\n            </div>\n\n            <AntInput\n                type={type}\n                className={`input__select ${inputClassName}`}\n                onChange={onChange}\n                value={value}\n                placeholder={placeholder}\n                name={name}\n                prefix={Prefix}\n                disabled={disabled}\n            />\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport { Select as AntSelect, Tooltip } from 'antd';\nimport { SelectValue } from 'antd/lib/select';\n\nimport './Select.css';\nimport { Option as OptionModel } from '../../models/Option';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst { Option } = AntSelect;\n\ninterface Props {\n    options: OptionModel[];\n    onChange?: (value: SelectValue) => void;\n    value?: SelectValue;\n    placeholder?: string;\n    label?: string;\n    mode?: 'multiple' | 'tags';\n    disabled?: boolean;\n    infoText?: string;\n    removeClear?: boolean;\n}\n\nexport const Select: FC<Props> = ({\n    options,\n    onChange,\n    value,\n    placeholder,\n    label,\n    mode,\n    disabled,\n    infoText,\n    removeClear,\n}) => {\n    return (\n        <div className=\"single-select__wrapper\">\n            <div className=\"info-text-wrapper\">\n                <label className=\"single-select__label\">{label}</label>\n                {infoText && (\n                    <Tooltip title={infoText}>\n                        <InfoCircleOutlined />\n                    </Tooltip>\n                )}\n            </div>\n            <AntSelect\n                className=\"single-select__select\"\n                onChange={onChange}\n                value={value}\n                placeholder={placeholder}\n                allowClear={!removeClear}\n                mode={mode}\n                disabled={disabled}\n            >\n                {options.map(({ label, value }) => {\n                    return (\n                        <Option key={value} value={value}>\n                            {label}\n                        </Option>\n                    );\n                })}\n            </AntSelect>\n        </div>\n    );\n};\n","import { ApiService } from '.';\n\nexport const getItemMedia = async (itemId: string) => {\n    return ApiService<any>({ method: 'GET', url: `/view/item_listing/${itemId}/media` });\n};\n","export const findSelectedIds = (data: any[], target: number) => {\n    const memo: any[] = [];\n    const recr = (item: any, target: number) => {\n        const { id, children } = item;\n        if (id === target) {\n            memo.push(id);\n            return true;\n        }\n        let flag = false;\n        children.forEach((c: any) => {\n            if (recr(c, target)) {\n                flag = true;\n            }\n        });\n        if (flag) {\n            memo.push(id);\n            return true;\n        }\n        return false;\n    };\n    data.forEach((item) => {\n        recr(item, target);\n    });\n    return memo.reverse();\n};\n","export const findSelectedNames = (data: any[], target: number) => {\n    const memo: any[] = [];\n    const recr = (item: any, target: number) => {\n        const { id, name, children } = item;\n        if (id === target) {\n            memo.push(name);\n            return true;\n        }\n        let flag = false;\n        children.forEach((c: any) => {\n            if (recr(c, target)) {\n                flag = true;\n            }\n        });\n        if (flag) {\n            memo.push(name);\n            return true;\n        }\n        return false;\n    };\n    data.forEach((item) => {\n        recr(item, target);\n    });\n    return memo.reverse();\n};\n","import { FC } from 'react';\nimport { ChevronsRight } from 'react-feather';\n\nimport './Breadcrumbs.css';\nimport { useBreadcrumbs } from './useBreadcrumbs';\n\nexport const Breadcrumbs: FC = () => {\n    const { breadcrumbs, onBreadcrumbClick } = useBreadcrumbs();\n    if (breadcrumbs.length === 0) {\n        return null;\n    }\n    return (\n        <div className='breadcrumbs'>\n            {breadcrumbs.map(({ id, name }, idx, src) => {\n                return (\n                    <div key={id + '_' + idx} style={{ display: 'flex', alignItems: 'center' }}>\n                        <div className='breadcrumbs__item' onClick={() => onBreadcrumbClick(id)}>\n                            {name}\n                        </div>\n                        {idx !== src.length - 1 && <ChevronsRight size={14} />}\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","import { useCallback, useMemo } from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport { findSelectedIds } from '../../utils/findSelectedIds';\nimport { findSelectedNames } from '../../utils/findSelectedNames';\nimport { useAppHistory } from '../../utils/useAppHistory';\n\nexport const useBreadcrumbs = () => {\n    const { goTo, state, path } = useAppHistory();\n    const categoryTree = useAppSelector((state) => state.categoryTree.tree);\n\n    const { sidebarFilters } = state ?? {};\n\n    const onBreadcrumbClick = useCallback(\n        (id: number) => {\n            const selectedIds = findSelectedIds(categoryTree, id);\n            goTo(path, false, { sidebarFilters: selectedIds });\n        },\n        [categoryTree, goTo, path]\n    );\n\n    const breadcrumbs: { id: number; name: string }[] = useMemo(() => {\n        if (!sidebarFilters || sidebarFilters.length === 0) {\n            return [];\n        }\n        const names = findSelectedNames(categoryTree, sidebarFilters[sidebarFilters.length - 1]);\n\n        return sidebarFilters.map((id: number, idx: number) => {\n            return {\n                id,\n                name: names[idx],\n            };\n        });\n    }, [categoryTree, sidebarFilters]);\n\n    return {\n        onBreadcrumbClick,\n        breadcrumbs,\n    };\n};\n","import { Collapse } from 'antd';\nimport { FC } from 'react';\n\nimport './ModalSection.css';\n\nconst { Panel } = Collapse;\n\ninterface Props {\n    title: string;\n    defaultOpen?: boolean;\n}\n\nexport const ModalSection: FC<Props> = ({ title, children, defaultOpen = false }) => {\n    return (\n        <div className=\"modal-section\">\n            <Collapse defaultActiveKey={!defaultOpen ? [] : ['1']} onChange={() => {}} ghost>\n                <Panel header={title} key=\"1\">\n                    {children}\n                </Panel>\n            </Collapse>\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport { Slider as AntSlider } from 'antd';\n\nimport './Slider.css';\n\ninterface Props {\n    value?: number;\n    min: number;\n    max: number;\n    label?: string;\n    prefix?: string;\n    suffix?: string;\n    onChange?: any;\n}\n\nexport const Slider: FC<Props> = ({ label, value, min, max, suffix, prefix, onChange }) => {\n    return (\n        <div className=\"slider__wrapper\">\n            <label className=\"slider__label\">{label}</label>\n            <div className=\"slider__main\">\n                {prefix && <span className=\"slider__prefix\">{prefix}</span>}\n                <AntSlider\n                    className=\"slider__slider\"\n                    value={value}\n                    min={min}\n                    max={max}\n                    onChange={onChange}\n                    tooltipVisible={false}\n                />\n                {suffix && <span className=\"slider__prefix\">{suffix}</span>}\n            </div>\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport { Switch as AntSwitch } from 'antd';\n\nimport './Switch.css';\nimport { SwitchChangeEventHandler } from 'antd/lib/switch';\n\ninterface Props {\n    label?: string;\n    onChange: SwitchChangeEventHandler;\n    checked: boolean;\n}\n\nexport const Switch: FC<Props> = ({ label, onChange, checked }) => {\n    return (\n        <div className=\"switch__wrapper\">\n            <label className=\"switch__label\">{label}</label>\n            <AntSwitch className=\"switch__select\" onChange={onChange} checked={checked} />\n        </div>\n    );\n};\n","import { Col, Form, Modal, Row } from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { FC, useMemo, useState } from 'react';\nimport { ModalSection } from '../../modals/components/section';\nimport { useAppSelector } from '../../redux/hooks';\nimport { Select } from '../select';\nimport { Option } from '../../models/Option';\nimport { Input } from '../input';\nimport { Slider } from '../slider';\nimport { Switch } from '../switch';\n\nconst FormCol: FC = ({ children }) => {\n    return (\n        <Col xl={8} lg={8} sm={12} xs={24}>\n            {children}\n        </Col>\n    );\n};\n\nconst { Item } = Form;\n\nexport const CFForm: FC<any> = ({ open, applyFilters, setOpen, activeAttributes, initialValues }) => {\n    const [form] = useForm();\n    // LISTING TYPES\n    const listingTypes = useAppSelector((state) => state.listingTypes.list);\n    const listingTypesOptions = useMemo<Option[]>(\n        () =>\n            listingTypes.map(({ id, name }) => ({\n                value: id.toString(),\n                label: name,\n            })),\n        [listingTypes]\n    );\n\n    // Country\n    const countries = useAppSelector((state) => state.countries.list);\n    const countryOptions = useMemo<Option[]>(\n        () =>\n            countries.map(({ id, name }) => ({\n                value: id.toString(),\n                label: name,\n            })),\n        [countries]\n    );\n\n    const [fromToError, setFromToError] = useState<boolean>(false);\n\n    const onFormChange = (values: any, allValues: any) => {\n        if (values?.price_from && allValues?.price_to) {\n            if (values.price_from >= allValues.price_to) {\n                setFromToError(true);\n            } else {\n                setFromToError(false);\n            }\n        }\n        if (values?.price_to && allValues?.price_from) {\n            if (values.price_to <= allValues.price_from) {\n                setFromToError(true);\n            } else {\n                setFromToError(false);\n            }\n        }\n    };\n\n    return (\n        <Form form={form} name=\"common-filters\" onValuesChange={onFormChange} initialValues={initialValues}>\n            <Modal\n                title=\"Filers\"\n                visible={open}\n                onOk={() => {\n                    const values = form.getFieldsValue();\n                    applyFilters(values);\n                }}\n                onCancel={() => setOpen(false)}\n                width=\"100%\"\n            >\n                <ModalSection title=\"Type, Price & Place\" defaultOpen>\n                    <Row gutter={[20, 20]}>\n                        <FormCol>\n                            <Item name=\"listing_type\">\n                                <Select\n                                    label=\"Ad type\"\n                                    options={listingTypesOptions}\n                                    placeholder=\"Select...\"\n                                    mode=\"tags\"\n                                />\n                            </Item>\n                        </FormCol>\n                        <FormCol>\n                            <Row gutter={[20, 0]}>\n                                <Col span={12}>\n                                    <Item name=\"price_from\" validateStatus={fromToError ? 'error' : undefined}>\n                                        <Input label=\"Price/Type\" placeholder=\"From\" type=\"number\" />\n                                    </Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Item name=\"price_to\" validateStatus={fromToError ? 'error' : undefined}>\n                                        <Input placeholder=\"To\" type=\"number\" />\n                                    </Item>\n                                </Col>\n                                {/* {!!categoryMeasurementUnitOptions && categoryMeasurementUnitOptions.length !== 0 && (\n                        <Col span={8}>\n                            <Select\n                                options={categoryMeasurementUnitOptions}\n                                value={selectedCategoryMeasurementUnit}\n                                onChange={(val) => setSelectedCategoryMeasurementUnit(val as string)}\n                                placeholder=\"Select...\"\n                            />\n                        </Col>\n                    )} */}\n                            </Row>\n                        </FormCol>\n                        <FormCol>\n                            <Item name=\"include_items_without_price\">\n                                <Slider min={0} max={2} label=\"Includes ads without price\" prefix=\"Yes\" suffix=\"No\" />\n                            </Item>\n                        </FormCol>\n                        <FormCol>\n                            <Item name=\"country\">\n                                <Select label=\"Country\" options={countryOptions} placeholder=\"Select...\" mode=\"tags\" />\n                            </Item>\n                        </FormCol>\n                        <FormCol>\n                            <Item name=\"place\">\n                                <Input label=\"Ad place\" placeholder=\"Enter...\" />\n                            </Item>\n                        </FormCol>\n                        <FormCol>\n                            <Item name=\"owner_type\">\n                                <Slider\n                                    min={0}\n                                    max={2}\n                                    label=\"Published by\"\n                                    prefix=\"Individual\"\n                                    suffix=\"Organization\"\n                                />\n                            </Item>\n                        </FormCol>\n                        <Col xl={8} sm={24}>\n                            <Item name=\"include_items_with_media\">\n                                <Slider min={0} max={1} label=\"Includes ads without media\" prefix=\"No\" suffix=\"Yes\" />\n                            </Item>\n                        </Col>\n                    </Row>\n                </ModalSection>\n                {!!activeAttributes &&\n                    Object.keys(activeAttributes).map((key) => {\n                        const attr = activeAttributes[key];\n                        return (\n                            <ModalSection key={key} title={attr.name}>\n                                <Row gutter={[20, 20]}>\n                                    {attr.items.map((item: any) => {\n                                        switch (item.dataType) {\n                                            case 1: {\n                                                return (\n                                                    <Col key={item.attributeId} xl={8} sm={24}>\n                                                        <Input\n                                                            label={item.name}\n                                                            value={''}\n                                                            onChange={(e) => {}}\n                                                            placeholder=\"Enter...\"\n                                                            name={item.attributeId.toString()}\n                                                        />\n                                                    </Col>\n                                                );\n                                            }\n                                            case 2:\n                                            case 3: {\n                                                if (!!item.filterMaximum && !!item.filterMaximum && !!item.filterStep) {\n                                                    const data: any[] = [];\n                                                    for (\n                                                        let i = Number(item.filterMinimum);\n                                                        i <= Number(item.filterMaximum);\n                                                        i += Number(item.filterStep)\n                                                    ) {\n                                                        data.push({ value: i.toString(), label: i.toString() });\n                                                    }\n                                                    if (!!item.measurementUnits && item.measurementUnits.length !== 0) {\n                                                        return (\n                                                            <Col key={item.attributeId} xl={8} sm={24}>\n                                                                <Row gutter={[20, 0]}>\n                                                                    <Col span={16}>\n                                                                        <Select\n                                                                            label={item.name}\n                                                                            options={data}\n                                                                            value={undefined}\n                                                                            onChange={(val) => {}}\n                                                                            placeholder=\"Select...\"\n                                                                        />\n                                                                    </Col>\n                                                                    <Col span={8}>\n                                                                        <Select\n                                                                            options={item.measurementUnits}\n                                                                            value={undefined}\n                                                                            onChange={(val) => {}}\n                                                                            placeholder=\"Select...\"\n                                                                        />\n                                                                    </Col>\n                                                                </Row>\n                                                            </Col>\n                                                        );\n                                                    }\n                                                    return (\n                                                        <Col key={item.attributeId} xl={8} sm={24}>\n                                                            <Select\n                                                                label={item.name}\n                                                                options={data}\n                                                                value={undefined}\n                                                                onChange={(val) => {}}\n                                                                placeholder=\"Select...\"\n                                                            />\n                                                        </Col>\n                                                    );\n                                                }\n                                                if (!!item.measurementUnits && item.measurementUnits.length !== 0) {\n                                                    return (\n                                                        <Col key={item.attributeId} xl={8} sm={24}>\n                                                            <Row gutter={[20, 0]}>\n                                                                <Col span={16}>\n                                                                    <Input\n                                                                        label={item.name}\n                                                                        value={''}\n                                                                        onChange={(e) => {}}\n                                                                        placeholder=\"Enter...\"\n                                                                        name={item.attributeId.toString()}\n                                                                        type=\"number\"\n                                                                    />\n                                                                </Col>\n                                                                <Col span={8}>\n                                                                    <Select\n                                                                        options={item.measurementUnits}\n                                                                        value={undefined}\n                                                                        onChange={(val) => {}}\n                                                                        placeholder=\"Select...\"\n                                                                    />\n                                                                </Col>\n                                                            </Row>\n                                                        </Col>\n                                                    );\n                                                }\n                                                return (\n                                                    <Col key={item.attributeId} xl={8} sm={24}>\n                                                        <Input\n                                                            type=\"number\"\n                                                            label={item.name}\n                                                            value={''}\n                                                            onChange={(e) => {}}\n                                                            placeholder=\"Enter...\"\n                                                            name={item.attributeId.toString()}\n                                                        />\n                                                    </Col>\n                                                );\n                                            }\n                                            case 4: {\n                                                return 'Date';\n                                            }\n                                            case 5: {\n                                                return 'date time';\n                                            }\n                                            case 6: {\n                                                return (\n                                                    <Col key={item.attributeId} xl={8} sm={24}>\n                                                        <Switch label={item.name} checked={false} onChange={() => {}} />\n                                                    </Col>\n                                                );\n                                            }\n                                            case 7: {\n                                                return (\n                                                    <Col key={item.attributeId} xl={8} sm={24}>\n                                                        <Select\n                                                            label={item.name}\n                                                            options={item.values}\n                                                            value={undefined}\n                                                            onChange={(val) => {}}\n                                                            placeholder=\"Select...\"\n                                                        />\n                                                    </Col>\n                                                );\n                                            }\n                                            case 8: {\n                                                return (\n                                                    <Col key={item.attributeId} xl={8} sm={24}>\n                                                        <Select\n                                                            label={item.name}\n                                                            options={item.values}\n                                                            value={undefined}\n                                                            onChange={(val) => {}}\n                                                            placeholder=\"Select...\"\n                                                            mode=\"multiple\"\n                                                        />\n                                                    </Col>\n                                                );\n                                            }\n                                            default: {\n                                                return null;\n                                            }\n                                        }\n                                    })}\n                                    {/* <Col xl={8} sm={24}>\n                            <Select\n                                label=\"Ad type\"\n                                options={listingTypesOptions}\n                                value={selectedListingTypeOption}\n                                onChange={(val) => setSelectedListingTypeOptions(val as string[])}\n                                placeholder=\"Select...\"\n                                mode=\"tags\"\n                            />\n                        </Col> */}\n                                </Row>\n                            </ModalSection>\n                        );\n                    })}\n            </Modal>\n        </Form>\n    );\n};\n","import { ApiService } from '.';\n\nexport const getCategoryAttributes = async (category: number) => {\n    const url = `category/${category}/attributes`;\n    return ApiService<any>({ method: 'GET', url });\n};\n","import { ApiService } from '.';\n\nexport const getCategoryMeasurementUnits = async (category: number) => {\n    const url = 'category_measurement_units/' + category;\n    return ApiService<any>({ method: 'GET', url });\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { getCategoryAttributes } from '../../api/categoryAttributes';\nimport { getCategoryMeasurementUnits } from '../../api/categoryMeasurementUnits';\nimport { Option } from '../../models/Option';\nimport { useAppHistory } from '../../utils/useAppHistory';\n\ninterface IActiveCategories {\n    [key: string]: {\n        name: string;\n        items: {\n            attributeId: number;\n            name: string;\n            childAttributeId?: number;\n            parentAttributeId?: number;\n            filterMinimum?: number;\n            filterMaximum?: number;\n            filterStep?: number;\n            measurementUnits: any[];\n            dataType: number;\n            values: Option[];\n        }[];\n    };\n}\n\nexport const useCategoryFilters = () => {\n    const { state, goTo, path } = useAppHistory();\n    const [open, setOpen] = useState<boolean>(false);\n    const [activeAttributes, setActiveAttributes] = useState<IActiveCategories>();\n\n    const activeCategory = useMemo(() => {\n        if ((state?.sidebarFilters ?? []).length === 0) {\n            return undefined;\n        }\n        return state.sidebarFilters[state.sidebarFilters.length - 1];\n    }, [state?.sidebarFilters]);\n\n    const commonFilters = useMemo(() => {\n        let filters: any = { include_items_without_price: 1, owner_type: 1, include_items_with_media: 1 };\n        if (state?.commonFilters) {\n            filters = { ...filters, ...state.commonFilters };\n        }\n        return filters;\n    }, [state?.commonFilters]);\n\n    // useEffect(() => {\n    //     form.resetFields();\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, [commonFilters]);\n\n    useEffect(() => {\n        const fetch = async () => {\n            const categoryAttributes = await getCategoryAttributes(Number(activeCategory));\n            const attributes: any[] = categoryAttributes.data.items;\n            const attrs = attributes.reduce<IActiveCategories>((memo, attr, index) => {\n                if (attr.name === 'Production year') {\n                    console.log(attr);\n                }\n                const item = {\n                    attributeId: attr.attribute_id,\n                    name: attr.name,\n                    childAttributeId: attr.child_attribute_id,\n                    parentAttributeId: attr.parent_attribute_id,\n                    filterMinimum: attr.filter_minimum,\n                    filterMaximum: attr.filter_maximum,\n                    filterStep: attr.filter_step,\n                    dataType: attr.data_type,\n                    measurementUnits: attr.measurement_units.map((elem: any) => {\n                        return {\n                            value: elem.measurement_unit_id.toString(),\n                            label: elem.name,\n                            default: elem.default,\n                        };\n                    }),\n                    values: (attr.attribute_values ?? []).map((elem: any) => ({\n                        value: elem.attribute_value_id.toString(),\n                        label: elem.name,\n                    })),\n                };\n                if (!memo[attr.group_id.toString()]) {\n                    memo[attr.group_id.toString()] = {\n                        name: attr.group_name,\n                        items: [item],\n                    };\n                } else {\n                    memo[attr.group_id.toString()].items.push(item);\n                }\n                return memo;\n            }, {});\n            setActiveAttributes(attrs);\n        };\n        if (!!activeCategory) {\n            fetch();\n        } else {\n            setActiveAttributes(undefined);\n        }\n    }, [activeCategory]);\n\n    // // RESET\n    // const reset = useCallback(() => {\n    //     form.resetFields();\n    // }, [form]);\n\n    // useEffect(() => {\n    //     if (!open) {\n    //         reset();\n    //     }\n    // }, [open, reset]);\n\n    // category measurement units\n    const [categoryMeasurementUnitOptions, setCategoryMeasurementUnitOptions] = useState<Option[] | undefined>();\n    useEffect(() => {\n        if (!activeCategory) {\n            setCategoryMeasurementUnitOptions(undefined);\n            return;\n        }\n        const fetch = async () => {\n            const response: any = await getCategoryMeasurementUnits(activeCategory);\n            const units = response.data.items.map(({ id, name }: any) => ({ value: id.toString(), label: name }));\n            setCategoryMeasurementUnitOptions(units);\n        };\n        fetch();\n    }, [activeCategory]);\n\n    const parseCommonFilters = (values: any) => {\n        console.log(values);\n        const commonFilters: any = {};\n        if (values?.listing_type && values?.listing_type?.length !== 0) {\n            commonFilters.listing_type = values?.listing_type;\n        }\n        if (values?.price_from) {\n            commonFilters.price_from = values?.price_from;\n        }\n        if (values?.price_to) {\n            commonFilters.price_to = values?.price_to;\n        }\n        if (values.include_items_without_price !== 1) {\n            commonFilters.include_items_without_price = values?.include_items_without_price;\n        }\n        if (values?.country && values?.country?.length !== 0) {\n            commonFilters.country = values?.country;\n        }\n        if (values?.place) {\n            commonFilters.place = values?.place;\n        }\n        if (values?.owner_type === 0) {\n            commonFilters.owner_type = 0;\n        }\n        if (values?.owner_type === 2) {\n            commonFilters.owner_type = 2;\n        }\n        if (values?.include_items_with_media === 0) {\n            commonFilters.include_items_with_media = false;\n        }\n        if (values?.include_items_with_media === 1) {\n            commonFilters.include_items_with_media = true;\n        }\n        return commonFilters;\n    };\n\n    const applyFilters = (values: any) => {\n        const commonFiltersData = parseCommonFilters(values);\n        console.log(commonFiltersData);\n        goTo(path, false, { commonFilters: commonFiltersData });\n        setOpen(false);\n    };\n\n    return {\n        activeAttributes,\n        open,\n        setOpen,\n        applyFilters,\n        commonFilters,\n        categoryMeasurementUnitOptions,\n    };\n};\n","import { FC } from 'react';\nimport { Filter } from 'react-feather';\n\nimport './CategoryFilters.css';\nimport { CFForm } from './CFForm';\nimport { useCategoryFilters } from './useCategoryFilters';\n\nexport const CategoryFilters: FC = () => {\n    const { applyFilters, activeAttributes, open, setOpen, commonFilters } = useCategoryFilters();\n    return (\n        <>\n            <div className=\"category-filters__button\" onClick={() => setOpen(true)}>\n                <Filter />\n            </div>\n            {open && (\n                <CFForm\n                    open={open}\n                    setOpen={setOpen}\n                    applyFilters={applyFilters}\n                    activeAttributes={activeAttributes}\n                    initialValues={commonFilters}\n                />\n            )}\n        </>\n    );\n};\n","import { FC } from 'react';\nimport { Grid, List } from 'react-feather';\nimport './ChangeListGridView.css';\nimport { useChangeListGridView } from './useChangeListGridView';\n\nexport const ChangeListGridView: FC = () => {\n    const { view, setActiveView } = useChangeListGridView();\n    return (\n        <>\n            <div\n                className={`change-grid-list-view__button${\n                    view === 'grid' ? ' change-grid-list-view__button-active' : ''\n                }`}\n                onClick={() => setActiveView('grid')}\n            >\n                <Grid />\n            </div>\n            <div\n                className={`change-grid-list-view__button${\n                    view === 'list' ? ' change-grid-list-view__button-active' : ''\n                }`}\n                onClick={() => setActiveView('list')}\n            >\n                <List />\n            </div>\n        </>\n    );\n};\n","import { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { setActive } from '../../redux/reducers/homeViewReducer';\n\nexport const useChangeListGridView = () => {\n    const dispatch = useAppDispatch();\n    const view = useAppSelector((state) => state.homeView.active);\n\n    const setActiveView = useCallback(\n        (active: 'list' | 'grid') => {\n            dispatch(setActive(active));\n        },\n        [dispatch],\n    );\n    return {\n        view,\n        setActiveView,\n    };\n};\n","export const findUrlCategories = (data: any[], target: any) => {\n    const memo: any[] = [];\n    const recr = (item: any, target: any) => {\n        const { id, name, children } = item;\n        if (id === target) {\n            memo.push(name);\n            return true;\n        }\n        let flag = false;\n        children.forEach((c: any) => {\n            if (recr(c, target)) {\n                flag = true;\n            }\n        });\n        if (flag) {\n            memo.push(name);\n            return true;\n        }\n        return false;\n    };\n    data.forEach((item) => {\n        recr(item, target);\n    });\n    return memo.reverse();\n};\n","import { findUrlCategories } from './findUrlCategories';\nimport { prepareCategoriesForUrl } from './prepareCategoriesForUrl';\n\nexport const createAdUrl = (categories: any[], category: number, id: string, title: string) => {\n    const urlCategories = findUrlCategories(categories, category);\n    const preparedCategories = prepareCategoriesForUrl(urlCategories);\n    const encodedTitle = encodeURI(title.replaceAll(' ', '-'));\n    return `/ad/${id}/${preparedCategories}/${encodedTitle}`;\n};\n","export const prepareCategoriesForUrl = (categories: any[]) => {\n    return categories.map((category) => category.toLowerCase().trim().split(' ').join('-')).join('/');\n};\n","import { useTranslation } from 'react-i18next';\nimport { IMainPageItem } from '../../dto/mainPageDto';\nimport { useAppSelector } from '../../redux/hooks';\nimport { createAdUrl } from '../../utils/createAdUrl';\n\nexport const useGridItem = (item: IMainPageItem) => {\n    const { t } = useTranslation();\n    const categoryTree = useAppSelector((state) => state.categoryTree.tree);\n    const {\n        category,\n        id,\n        title,\n        country_name,\n        place,\n        attributes,\n        description,\n        listing_type_name,\n        default_image,\n        currency_name,\n        price_formatted,\n        converted_price_formatted,\n        price_by_agreement,\n        measurement_unit_name,\n        owner_nickname,\n        owner_name,\n        create_date_formatted,\n        view_count,\n    } = item;\n    const adUrl = createAdUrl(categoryTree, category, id, title);\n    const placeText = [country_name, place].filter(Boolean).join(', ');\n    const priorityAttributes = createPriorityAttributesStr(attributes);\n    const itemDescription = createDescription(description);\n\n    const trimmedItemDescription =\n        itemDescription.length > 500 ? itemDescription.substring(0, 500) + '...' : itemDescription;\n\n    return {\n        adUrl,\n        placeText,\n        priorityAttributes,\n        trimmedItemDescription,\n        listing_type_name,\n        default_image,\n        title,\n        id,\n        itemDescription,\n        currency_name,\n        price_formatted,\n        converted_price_formatted,\n        price_by_agreement,\n        measurement_unit_name,\n        owner_nickname,\n        owner_name,\n        create_date_formatted,\n        view_count,\n        t,\n    };\n};\n\nconst createPriorityAttributesStr = (attributes: any[]) => {\n    const isMetricSystem = true;\n    const strArr = attributes.map((attribute) => {\n        const { value_formatted, measurement_unit_name, additional_measurement_units } = attribute;\n        const [value, unit] = getValueAndUnit(\n            value_formatted,\n            measurement_unit_name,\n            additional_measurement_units,\n            isMetricSystem\n        );\n        let s = value;\n        if (unit !== null && unit !== undefined) {\n            s += ' ' + unit;\n        }\n        return s;\n    });\n    return strArr.join('; ');\n};\n\nconst getValueAndUnit = (\n    value_formatted: any,\n    measurement_unit_name: any,\n    additional_measurement_units: any[],\n    isMetricSystem: any\n) => {\n    if (additional_measurement_units.length === 0) {\n        return [value_formatted, measurement_unit_name];\n    }\n    const additionalMeasurementUnit = additional_measurement_units.find(\n        ({ metric_system }) => metric_system === isMetricSystem\n    );\n    const { value_formatted: value_formatted2, name } = additionalMeasurementUnit || {};\n    return [value_formatted2, name];\n};\n\nconst createDescription = (description: string) => {\n    const container = document.createElement('div');\n    container.innerHTML = description;\n    const elements = container.childNodes;\n    const textElements = [];\n    for (let element of elements as any) {\n        let text = '';\n        if (element.tagName === 'UL') {\n            const innerElements = element.childNodes;\n            let innerTextElements = [];\n            for (let innerElement of innerElements) {\n                const innerText = innerElement.textContent || innerElement.innerText || null;\n                if (innerText !== null && innerText.length !== 0) {\n                    innerTextElements.push(innerText);\n                }\n            }\n            text = innerTextElements.join(' ');\n        } else {\n            text = element.textContent || element.innerText || null;\n        }\n        if (text !== null && text.length !== 0) {\n            textElements.push(text);\n        }\n    }\n    return textElements.join(' ');\n};\n","import { imageBaseUrl } from '../constants/imageBaseUrl';\n\nexport const createImageUrlByMediaType = (mediaType: number, id: string, videoCode: string) =>\n    mediaType === 1 ? imageBaseUrl + id + '.jpeg' : 'https://img.youtube.com/vi/' + videoCode + '/maxresdefault.jpg';\n","import { useEffect, useState } from 'react';\nimport { getItemMedia } from '../../api/itemMedia';\nimport { createImageUrl } from '../../utils/createImageUrl';\nimport { createImageUrlByMediaType } from '../../utils/createImageUrlByMediaType';\n\nexport const useContentImageView = (itemId: string, title: string, defaultImage?: string) => {\n    const defaultImgUrl = createImageUrl(defaultImage);\n    const [availableImages, setAvailableImages] = useState([\n        {\n            url: defaultImgUrl,\n            alt: title,\n            id: defaultImage !== null && defaultImage !== undefined ? defaultImage : 'DEFAULT_IMAGE',\n        },\n    ]);\n    useEffect(() => {\n        const getMedia = async () => {\n            if (!!defaultImage) {\n                const { data } = await getItemMedia(itemId);\n                const { error_id } = data;\n                if (error_id === 0) {\n                    const { items } = data;\n                    const images: any[] = [];\n                    for (let item of items) {\n                        const { id, default: defaultImg, media_type, video_code } = item;\n                        if (!defaultImg) {\n                            const url = createImageUrlByMediaType(media_type, id, video_code);\n                            images.push({ url, alt: title, id });\n                        }\n                        if (images.length) {\n                            setAvailableImages([{ url: defaultImgUrl, alt: title, id: 'DEFAULT_IMAGE' }, ...images]);\n                        }\n                    }\n                }\n            }\n        };\n        getMedia();\n    }, [defaultImage, defaultImgUrl, itemId, title]);\n    return {\n        availableImages,\n    };\n};\n","import { ImgJpg } from '../assets';\nimport { imageBaseUrl } from '../constants/imageBaseUrl';\n\nexport const createImageUrl = (defaultImage?: string) =>\n    !!defaultImage ? imageBaseUrl + defaultImage + '.jpeg' : ImgJpg;\n","import { FC, useCallback, useState } from 'react';\nimport { ArrowLeft, ArrowRight } from 'react-feather';\nimport { useContentImageView } from './useContentImageView';\n\ninterface IContentImageView {\n    defaultImage: string;\n    title: string;\n    itemId: string;\n}\n\nexport const ContentImageView: FC<IContentImageView> = ({ defaultImage, title, itemId }) => {\n    const { availableImages } = useContentImageView(itemId, title, defaultImage);\n    return (\n        <div className='content-image-view'>\n            {availableImages.length === 1 ? (\n                <img\n                    key={availableImages[0].id}\n                    className='content-image-view__image'\n                    src={availableImages[0].url}\n                    alt={availableImages[0].alt}\n                />\n            ) : (\n                <MultiImageView images={availableImages} />\n            )}\n        </div>\n    );\n};\n\ninterface IMultiImageViewProps {\n    images: { id: string; url: string; alt: string }[];\n}\n\nconst useMultiImageView = (images: { id: string; url: string; alt: string }[]) => {\n    const [currentIdx, setCurrentIdx] = useState<number>(0);\n    const [className, setClassName] = useState<string>('');\n\n    const onNext = useCallback(() => {\n        const nextIdx = currentIdx === images.length - 1 ? 0 : currentIdx + 1;\n        setCurrentIdx(nextIdx);\n        setClassName('content-image-view__multi-image-from-rigth');\n    }, [currentIdx, images.length]);\n\n    const onPrev = useCallback(() => {\n        const prevIdx = currentIdx === 0 ? images.length - 1 : currentIdx - 1;\n        setCurrentIdx(prevIdx);\n        setClassName('content-image-view__multi-image-from-left');\n    }, [currentIdx, images.length]);\n    return {\n        className,\n        currentIdx,\n        onNext,\n        onPrev,\n    };\n};\n\nconst MultiImageView: FC<IMultiImageViewProps> = ({ images }) => {\n    const { className, currentIdx, onNext, onPrev } = useMultiImageView(images);\n    return (\n        <div className='content-image-view__multi'>\n            <img\n                key={images[currentIdx].id}\n                className={`content-image-view__multi-image ${className}`}\n                src={images[currentIdx].url}\n                alt={images[currentIdx].alt}\n            />\n            <ArrowLeft\n                className='content-image-view__multi-arrow-left'\n                onClick={(e: any) => {\n                    e.preventDefault();\n                    onPrev();\n                }}\n                size={28}\n            />\n            <ArrowRight\n                className='content-image-view__multi-arrow-right'\n                onClick={(e: any) => {\n                    e.preventDefault();\n                    onNext();\n                }}\n                size={28}\n            />\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport { IMainPageItem } from '../../dto/mainPageDto';\nimport { Card } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { useGridItem } from './useGridItem';\nimport { ContentImageView } from '../content-image-view';\nimport { MapPin } from 'react-feather';\n\ninterface IGridItem {\n    item: IMainPageItem;\n}\n\nconst userCurrencyName = null;\n\nexport const GridItem: FC<IGridItem> = ({ item }) => {\n    const {\n        t,\n        adUrl,\n        placeText,\n        priorityAttributes,\n        trimmedItemDescription,\n        listing_type_name,\n        default_image,\n        title,\n        id,\n        itemDescription,\n        currency_name,\n        price_formatted,\n        converted_price_formatted,\n        price_by_agreement,\n        measurement_unit_name,\n        owner_nickname,\n        owner_name,\n        create_date_formatted,\n        view_count,\n    } = useGridItem(item);\n    return (\n        <Card className=\"grid-item\">\n            <Link to={adUrl}>\n                {' '}\n                <div className=\"card-content\">\n                    <h6 className=\"item-title\" title={title}>\n                        <strong>{listing_type_name}:</strong> {title}\n                    </h6>\n                    <ContentImageView defaultImage={default_image} title={title} itemId={id} />\n                    <div className=\"item-price-wrapper\">\n                        <h6 className=\"item-price\">\n                            {currency_name === userCurrencyName\n                                ? price_formatted\n                                : converted_price_formatted === null && price_formatted === null\n                                ? null\n                                : `≈ ${converted_price_formatted}`}{' '}\n                            {converted_price_formatted === null && price_formatted === null\n                                ? price_by_agreement === true\n                                    ? t('lblPriceByAgreement')\n                                    : null\n                                : userCurrencyName}\n                            {measurement_unit_name !== null && '/'}\n                            {measurement_unit_name}\n                        </h6>\n                        {currency_name !== userCurrencyName && (\n                            <h6 className=\"item-price-second\">\n                                {price_formatted} {currency_name}\n                                {measurement_unit_name !== null && '/'}\n                                {measurement_unit_name}\n                            </h6>\n                        )}\n                    </div>\n                    <div className=\"item-main-wrapper\">\n                        <h6 className=\"item-title\" title={title}>\n                            <strong>{listing_type_name}:</strong> {title}\n                        </h6>\n                        {priorityAttributes && (\n                            <span className=\"item-attributes\" title={priorityAttributes}>\n                                {priorityAttributes}\n                            </span>\n                        )}\n                        <span className=\"item-description\" title={itemDescription}>\n                            {trimmedItemDescription}\n                        </span>\n                    </div>\n                    <div className=\"item-additional-content\">\n                        <div className=\"item-additional-content\">\n                            <div className=\"item-owner-wrapper\">\n                                <p className=\"item-owner\">\n                                    <span>{t('lblPostedBy')}: </span>\n                                    {owner_nickname}\n                                    {owner_name !== null ? ` (${owner_name})` : ''}\n                                </p>\n                            </div>\n                            <div className=\"item-location-wrapper\">\n                                <MapPin size={15} className=\"item-location-pin\" />\n                                <span className=\"item-location\">{placeText}</span>\n                            </div>\n                            <div className=\"item-created-wrapper\">\n                                <div className=\"item-created-desktop\">\n                                    <span className=\"item-created\">\n                                        {t('lblCreated')}: <strong>{create_date_formatted}</strong>\n                                    </span>\n                                    <span className=\"item-created\">\n                                        {t('lblViews')}: <strong>{view_count}</strong>\n                                    </span>\n                                </div>\n                                <div className=\"item-created-mobile\">\n                                    <span className=\"item-created\">\n                                        {t('lblCreated')}: <strong>{create_date_formatted}</strong>, {t('lblViews')}:{' '}\n                                        <strong>{view_count}</strong>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        </Card>\n    );\n};\n","import { FC } from 'react';\nimport { IMainPageItem } from '../../dto/mainPageDto';\nimport { GridItem } from '../grid-item';\n\nimport './GridItems.css';\n\ninterface IGridItemsProps {\n    items: IMainPageItem[];\n}\n\nexport const GridItems: FC<IGridItemsProps> = ({ items }) => {\n    return (\n        <div className=\"grid-items\">\n            {items.map((item, idx) => (\n                <GridItem key={item.id + '_' + idx} item={item} />\n            ))}\n        </div>\n    );\n};\n","import { useTranslation } from 'react-i18next';\nimport { IMainPageItem } from '../../dto/mainPageDto';\nimport { useAppSelector } from '../../redux/hooks';\nimport { createAdUrl } from '../../utils/createAdUrl';\n\nexport const useListItem = (item: IMainPageItem) => {\n    const { t } = useTranslation();\n    const categoryTree = useAppSelector((state) => state.categoryTree.tree);\n    const {\n        category,\n        id,\n        title,\n        country_name,\n        place,\n        attributes,\n        description,\n        listing_type_name,\n        default_image,\n        currency_name,\n        price_formatted,\n        converted_price_formatted,\n        price_by_agreement,\n        measurement_unit_name,\n        owner_nickname,\n        owner_name,\n        create_date_formatted,\n        view_count,\n    } = item;\n    const adUrl = createAdUrl(categoryTree, category, id, title);\n    const placeText = [country_name, place].filter(Boolean).join(', ');\n    const priorityAttributes = createPriorityAttributesStr(attributes);\n    const itemDescription = createDescription(description);\n\n    const trimmedItemDescription =\n        itemDescription.length > 500 ? itemDescription.substring(0, 500) + '...' : itemDescription;\n\n    return {\n        adUrl,\n        placeText,\n        priorityAttributes,\n        trimmedItemDescription,\n        listing_type_name,\n        default_image,\n        title,\n        id,\n        itemDescription,\n        currency_name,\n        price_formatted,\n        converted_price_formatted,\n        price_by_agreement,\n        measurement_unit_name,\n        owner_nickname,\n        owner_name,\n        create_date_formatted,\n        view_count,\n        t,\n    };\n};\n\nconst createPriorityAttributesStr = (attributes: any[]) => {\n    const isMetricSystem = true;\n    const strArr = attributes.map((attribute) => {\n        const { value_formatted, measurement_unit_name, additional_measurement_units } = attribute;\n        const [value, unit] = getValueAndUnit(\n            value_formatted,\n            measurement_unit_name,\n            additional_measurement_units,\n            isMetricSystem\n        );\n        let s = value;\n        if (unit !== null && unit !== undefined) {\n            s += ' ' + unit;\n        }\n        return s;\n    });\n    return strArr.join('; ');\n};\n\nconst getValueAndUnit = (\n    value_formatted: any,\n    measurement_unit_name: any,\n    additional_measurement_units: any[],\n    isMetricSystem: any\n) => {\n    if (additional_measurement_units.length === 0) {\n        return [value_formatted, measurement_unit_name];\n    }\n    const additionalMeasurementUnit = additional_measurement_units.find(\n        ({ metric_system }) => metric_system === isMetricSystem\n    );\n    const { value_formatted: value_formatted2, name } = additionalMeasurementUnit || {};\n    return [value_formatted2, name];\n};\n\nconst createDescription = (description: string) => {\n    const container = document.createElement('div');\n    container.innerHTML = description;\n    const elements = container.childNodes;\n    const textElements = [];\n    for (let element of elements as any) {\n        let text = '';\n        if (element.tagName === 'UL') {\n            const innerElements = element.childNodes;\n            let innerTextElements = [];\n            for (let innerElement of innerElements) {\n                const innerText = innerElement.textContent || innerElement.innerText || null;\n                if (innerText !== null && innerText.length !== 0) {\n                    innerTextElements.push(innerText);\n                }\n            }\n            text = innerTextElements.join(' ');\n        } else {\n            text = element.textContent || element.innerText || null;\n        }\n        if (text !== null && text.length !== 0) {\n            textElements.push(text);\n        }\n    }\n    return textElements.join(' ');\n};\n","import { FC } from 'react';\nimport { IMainPageItem } from '../../dto/mainPageDto';\nimport { Card } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { useListItem } from './useListItem';\nimport { ContentImageView } from '../content-image-view';\nimport { MapPin } from 'react-feather';\n\ninterface IListItem {\n    item: IMainPageItem;\n}\n\nconst userCurrencyName = null;\n\nexport const ListItem: FC<IListItem> = ({ item }) => {\n    const {\n        t,\n        adUrl,\n        placeText,\n        priorityAttributes,\n        trimmedItemDescription,\n        listing_type_name,\n        default_image,\n        title,\n        id,\n        itemDescription,\n        currency_name,\n        price_formatted,\n        converted_price_formatted,\n        price_by_agreement,\n        measurement_unit_name,\n        owner_nickname,\n        owner_name,\n        create_date_formatted,\n        view_count,\n    } = useListItem(item);\n    return (\n        <Card className=\"list-item\">\n            <Link to={adUrl}>\n                {' '}\n                <div className=\"card-content\">\n                    <ContentImageView defaultImage={default_image} title={title} itemId={id} />\n                    <div className=\"item-main-wrapper\">\n                        <h6 className=\"item-title\" title={title}>\n                            <strong>{listing_type_name}:</strong> {title}\n                        </h6>\n                        {priorityAttributes && (\n                            <span className=\"item-attributes\" title={priorityAttributes}>\n                                {priorityAttributes}\n                            </span>\n                        )}\n                        <span className=\"item-description\" title={itemDescription}>\n                            {trimmedItemDescription}\n                        </span>\n                    </div>\n                    <div className=\"item-additional-content\">\n                        <div className=\"item-price-wrapper\">\n                            <h6 className=\"item-price\">\n                                {currency_name === userCurrencyName\n                                    ? price_formatted\n                                    : converted_price_formatted === null && price_formatted === null\n                                    ? null\n                                    : `≈ ${converted_price_formatted}`}{' '}\n                                {converted_price_formatted === null && price_formatted === null\n                                    ? price_by_agreement === true\n                                        ? t('lblPriceByAgreement')\n                                        : null\n                                    : userCurrencyName}\n                                {measurement_unit_name !== null && '/'}\n                                {measurement_unit_name}\n                            </h6>\n                            {currency_name !== userCurrencyName && (\n                                <h6 className=\"item-price-second\">\n                                    {price_formatted} {currency_name}\n                                    {measurement_unit_name !== null && '/'}\n                                    {measurement_unit_name}\n                                </h6>\n                            )}\n                        </div>\n                        <div className=\"item-owner-wrapper\">\n                            <p className=\"item-owner\">\n                                <span>{t('lblPostedBy')}: </span>\n                                {owner_nickname}\n                                {owner_name !== null ? ` (${owner_name})` : ''}\n                            </p>\n                        </div>\n                        <div className=\"item-location-wrapper\">\n                            <MapPin size={15} className=\"item-location-pin\" />\n                            <span className=\"item-location\">{placeText}</span>\n                        </div>\n                        <div className=\"item-created-wrapper\">\n                            <div className=\"item-created-desktop\">\n                                <span className=\"item-created\">\n                                    {t('lblCreated')}: <strong>{create_date_formatted}</strong>\n                                </span>\n                                <span className=\"item-created\">\n                                    {t('lblViews')}: <strong>{view_count}</strong>\n                                </span>\n                            </div>\n                            <div className=\"item-created-mobile\">\n                                <span className=\"item-created\">\n                                    {t('lblCreated')}: <strong>{create_date_formatted}</strong>, {t('lblViews')}:{' '}\n                                    <strong>{view_count}</strong>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        </Card>\n    );\n};\n","import { FC } from 'react';\nimport { IMainPageItem } from '../../dto/mainPageDto';\nimport { ListItem } from '../list-item';\n\nimport './ListItems.css';\n\ninterface IListItemsProps {\n    items: IMainPageItem[];\n}\n\nexport const ListItems: FC<IListItemsProps> = ({ items }) => {\n    return (\n        <div className='list-items'>\n            {items.map((item, idx) => (\n                <ListItem key={item.id + '_' + idx} item={item} />\n            ))}\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport {\n    Truck,\n    Target,\n    Monitor,\n    ShoppingCart,\n    Home,\n    Server,\n    Coffee,\n    Users,\n    Wind,\n    Feather,\n    Grid,\n    Anchor,\n    Circle,\n} from 'react-feather';\n\ninterface ICategoryIconProps {\n    itemIcon: string;\n}\n\nexport const CategoryIcon: FC<ICategoryIconProps> = ({ itemIcon }) => {\n    // Truck, Target, Monitor, ShoppingCart, Home, Server, Grid, Coffee, Users, Anchor, Wind, Feather\n    const iconSize = 14;\n    switch (itemIcon) {\n        case 'Truck':\n            return <Truck size={iconSize}></Truck>;\n        case 'Target':\n            return <Target size={iconSize}></Target>;\n        case 'Monitor':\n            return <Monitor size={iconSize}></Monitor>;\n        case 'ShoppingCart':\n            return <ShoppingCart size={iconSize}></ShoppingCart>;\n        case 'Home':\n            return <Home size={iconSize}></Home>;\n        case 'Server':\n            return <Server size={iconSize}></Server>;\n        case 'Grid':\n            return <Grid size={iconSize}></Grid>;\n        case 'Coffee':\n            return <Coffee size={iconSize}></Coffee>;\n        case 'Users':\n            return <Users size={iconSize}></Users>;\n        case 'Anchor':\n            return <Anchor size={iconSize}></Anchor>;\n        case 'Wind':\n            return <Wind size={iconSize}></Wind>;\n        case 'Feather':\n            return <Feather size={iconSize}></Feather>;\n        default:\n            return <Circle size={10}></Circle>;\n    }\n};\n","import { FC } from 'react';\n\nimport { useSidebar } from './useSidebar';\n\nimport './Sidebar.css';\nimport { Circle, Disc, ChevronRight, ChevronDown, X } from 'react-feather';\nimport { CategoryIcon } from '../category-icon/CategoryIcon';\nimport { Button } from 'antd';\nimport Hammer from 'react-hammerjs';\n\nexport const Sidebar: FC = () => {\n    const {\n        onItemClick,\n        docked,\n        open,\n        onDockedClick,\n        onSidebarMouseEnter,\n        onSidebarMouseLeave,\n        sidebarClassName,\n        sidebarTree,\n        onFilterClick,\n        t,\n        onSwipe,\n        isMobile,\n        mobileOpen,\n        selected,\n    } = useSidebar();\n    return (\n        <>\n            <Hammer onSwipe={onSwipe}>\n                <div className=\"sidebar__hammer\"></div>\n            </Hammer>\n            <div className={sidebarClassName}>\n                <div className=\"sidebar__header\" onMouseEnter={onSidebarMouseEnter} onMouseLeave={onSidebarMouseLeave}>\n                    {(docked || open || mobileOpen) && (\n                        <>\n                            <span className=\"sidebar__header-title\">Vevergo</span>\n                            <div className=\"sidebar__header-icon\" onClick={isMobile ? onSwipe : onDockedClick}>\n                                {isMobile ? <X /> : docked ? <Disc /> : <Circle />}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <div className=\"sidebar__content\">\n                    {sidebarTree.map((item) => (\n                        <SidebarItem\n                            key={item.id}\n                            first\n                            item={item}\n                            onItemClick={onItemClick}\n                            docked={docked}\n                            open={open}\n                            mobileOpen={mobileOpen}\n                            isMobile={isMobile}\n                        />\n                    ))}\n                </div>\n                {(docked || open || mobileOpen) && (\n                    <div className=\"sidebar__footer-wrapper\">\n                        <div className=\"sidebar__footer\">\n                            <Button\n                                onClick={onFilterClick}\n                                className=\"sidebar__footer-button\"\n                                disabled={selected.length === 0}\n                            >\n                                {t('lblFilter')}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nconst SidebarItem: FC<any> = ({ item, onItemClick, docked, open, first, mobileOpen, isMobile }) => {\n    const { id, name, type, children, icon, active } = item;\n    return (\n        <>\n            <div\n                key={id}\n                className={`sidebar__content-item ${\n                    active\n                        ? type === 'collapse'\n                            ? 'sidebar__content-item-active'\n                            : 'sidebar__content-item-active-last'\n                        : ''\n                }`}\n                onClick={() => onItemClick(id)}\n            >\n                <div className=\"sidebar__content-item-label\">\n                    <div className=\"sidebar__content-item-icon\">\n                        <CategoryIcon itemIcon={icon} />\n                    </div>\n                    {(isMobile ? mobileOpen : docked || open) && <span>{name}</span>}\n                </div>\n                {(isMobile ? mobileOpen : docked || open) &&\n                    type !== 'item' &&\n                    (active ? <ChevronDown size={14} /> : <ChevronRight size={14} />)}\n            </div>\n            {active && children && (\n                <div className=\"sidebar__content-item-sub\">\n                    {(children as any[]).map((child, idx) => (\n                        <SidebarItem\n                            key={idx}\n                            item={child}\n                            onItemClick={onItemClick}\n                            docked={docked}\n                            open={open}\n                            mobileOpen={mobileOpen}\n                        />\n                    ))}\n                </div>\n            )}\n        </>\n    );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { Category } from '../../redux/reducers/categoryTreeReducer';\nimport { setOpen, toggleDocked, setMobileOpen, toggleMobileOpen } from '../../redux/reducers/sidebarReducer';\nimport { findSelectedIds } from '../../utils/findSelectedIds';\nimport { useAppHistory } from '../../utils/useAppHistory';\nimport { useIsMobile } from '../../context/useIsMobile';\nimport { useTranslation } from 'react-i18next';\n\ninterface ISidebarItem {\n    icon: string;\n    id: number;\n    name: string;\n    children: ISidebarItem[];\n    type: 'collapse' | 'item';\n    active: boolean;\n}\n\nexport const useSidebar = () => {\n    const { t } = useTranslation();\n    const { goTo, path, state } = useAppHistory();\n    const dispatch = useAppDispatch();\n    const isMobile = useIsMobile();\n    const sidebarState = useAppSelector((state) => state.sidebar);\n    const mobileOpen = useAppSelector((state) => state.sidebar.mobileOpen);\n\n    const appliedFilters = useMemo(() => state?.sidebarFilters, [state?.sidebarFilters]);\n\n    useEffect(() => {\n        if (isMobile) {\n            dispatch(setMobileOpen(false));\n        }\n    }, [dispatch, isMobile]);\n\n    const categoryTree = useAppSelector((state) => state.categoryTree.tree);\n\n    const [selected, setSelected] = useState<number[]>([]);\n\n    useEffect(() => {\n        setSelected(appliedFilters ?? []);\n    }, [appliedFilters]);\n\n    const docked = useMemo(() => {\n        if (isMobile) {\n            return true;\n        }\n        return sidebarState?.docked;\n    }, [sidebarState?.docked, isMobile]);\n\n    const open = useMemo(() => {\n        if (isMobile) {\n            return mobileOpen;\n        }\n        return sidebarState?.open;\n    }, [isMobile, mobileOpen, sidebarState?.open]);\n\n    const onDockedClick = useCallback(() => {\n        dispatch(toggleDocked());\n    }, [dispatch]);\n\n    const onSidebarMouseEnter = useCallback(() => {\n        dispatch(setOpen(true));\n    }, [dispatch]);\n\n    const onSidebarMouseLeave = useCallback(() => {\n        dispatch(setOpen(false));\n    }, [dispatch]);\n\n    const sidebarClassName = useMemo(() => {\n        if (isMobile) return mobileOpen ? 'sidebar sidebar-mobile-open' : 'sidebar sidebar-mobile';\n        return docked || open ? 'sidebar sidebar-docked' : 'sidebar sidebar-undocked';\n    }, [docked, isMobile, open, mobileOpen]);\n\n    const createSidebarItem = useCallback(\n        (item: Category): ISidebarItem => {\n            const { children, icon, id, name, is_last } = item;\n            const itemChildren: ISidebarItem[] = is_last\n                ? []\n                : children.map((child: Category) => createSidebarItem(child));\n            return {\n                id,\n                name,\n                icon,\n                children: itemChildren,\n                type: is_last ? 'item' : 'collapse',\n                active: selected.includes(id),\n            };\n        },\n        [selected]\n    );\n\n    const sidebarTree = useMemo(\n        () =>\n            categoryTree.map((item) => {\n                return createSidebarItem(item);\n            }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [selected]\n    );\n\n    const onItemClick = useCallback(\n        (id: number) => {\n            if (selected.includes(id)) {\n                const obj = selected.reduce(\n                    (acc, sId, idx) => {\n                        if (id === sId) {\n                            acc = { ...acc, isFound: true };\n                        } else {\n                            acc = { ...acc, sIds: [...acc.sIds, sId] };\n                        }\n                        return acc;\n                    },\n                    { sIds: [] as any[], isFound: false }\n                );\n                setSelected(obj.sIds);\n            } else {\n                const selectedIds = findSelectedIds(categoryTree, id);\n                setSelected(selectedIds);\n            }\n        },\n        [categoryTree, selected]\n    );\n\n    const onFilterClick = useCallback(() => {\n        if (isMobile) {\n            dispatch(setMobileOpen(false));\n        }\n        goTo(path, false, { sidebarFilters: selected });\n    }, [dispatch, goTo, isMobile, path, selected]);\n\n    const onSwipe = useCallback(() => {\n        dispatch(toggleMobileOpen());\n    }, [dispatch]);\n\n    const isHome = useMemo(() => isMobile && path === '/', [isMobile, path]);\n\n    useEffect(() => {\n        if (isMobile && open) {\n            document.body.style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = 'unset';\n        }\n    }, [isMobile, open]);\n\n    return {\n        docked,\n        open,\n        onDockedClick,\n        onSidebarMouseEnter,\n        onSidebarMouseLeave,\n        sidebarClassName,\n        sidebarTree,\n        onItemClick,\n        onFilterClick,\n        t,\n        isMobile,\n        onSwipe,\n        isHome,\n        mobileOpen,\n        selected,\n    };\n};\n","export const sortByOptions = [\n    { value: 1, label: 'lblDateModifiedNewer', orderType: 0 },\n    { value: 0, label: 'lblDateModifiedOlder', orderType: 1 },\n    { value: 3, label: 'lblPriceLower', orderType: 0, orderItem: 1 },\n    { value: 2, label: 'lblPriceHighest', orderType: 1, orderItem: 1 },\n    { value: 5, label: 'lblRelevanceLeast', orderType: 0, orderItem: 2 },\n    { value: 4, label: 'lblRelevanceMost', orderType: 1, orderItem: 2 },\n    { value: 7, label: 'lblTitleAsc', orderType: 0, orderItem: 3 },\n    { value: 6, label: 'lblTitleDesc', orderType: 1, orderItem: 3 },\n    { value: 9, label: 'lblViewsLowest', orderType: 0, orderItem: 4 },\n    {\n        value: 8,\n        label: 'lblViewsHighest',\n        orderType: 1,\n        orderItem: 4,\n    },\n];\n","import { FC } from 'react';\nimport { useSortBy } from './useSortBy';\nimport './SortBy.css';\nimport { sortByOptions } from '../../constants/sortByOptions';\nimport { X } from 'react-feather';\n\nexport const SortBy: FC = () => {\n    const { open, toggleOpen, t, currRef, setActiveSort, sortValue, sortValueId } = useSortBy();\n    return (\n        <div ref={currRef} className=\"sort-by\">\n            <div className=\"sort-by__button\" onClick={() => toggleOpen()}>\n                {!!sortValue ? t(sortValue) : t('lblSortBy')}\n                {!!sortValue && (\n                    <X\n                        className=\"sort-by__close\"\n                        onClick={(e) => {\n                            e.stopPropagation();\n                            setActiveSort(undefined);\n                        }}\n                    />\n                )}\n                {open ? <OpenArrow /> : <ClosedArrow />}\n            </div>\n            {open && (\n                <div className=\"sort-by__list\">\n                    {sortByOptions.map(({ value, label }) => (\n                        <div\n                            key={value}\n                            className={`sort-by__item${sortValueId === value ? ' sort-by__item-active' : ''}`}\n                            onClick={() => setActiveSort(value)}\n                        >\n                            {label}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst OpenArrow: FC = () => <span className=\"sort-by__button-open\" />;\nconst ClosedArrow: FC = () => <span className=\"sort-by__button-closed\" />;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { sortByOptions } from '../../constants/sortByOptions';\nimport { useIsMobile } from '../../context/useIsMobile';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { setSort } from '../../redux/reducers/homeViewReducer';\nimport { useAppHistory } from '../../utils/useAppHistory';\nimport { useOutsideClickListener } from '../../utils/useOutsideClickListener';\n\nexport const useSortBy = () => {\n    const { state, goTo, path } = useAppHistory();\n    const { t } = useTranslation();\n    const sortValueId = useAppSelector((state) => state.homeView.sortValue);\n    const dispatch = useAppDispatch();\n    const isMobile = useIsMobile();\n    const [open, setOpen] = useState(false);\n    const currRef = useRef(null);\n\n    const toggleOpen = useCallback(\n        (forceClose?: boolean) => {\n            if (forceClose) {\n                setOpen(false);\n                return;\n            }\n            setOpen(!open);\n        },\n        [open],\n    );\n\n    const setActiveSort = useCallback(\n        (value: number | undefined) => {\n            goTo(path, false, { sortBy: value });\n            toggleOpen(true);\n        },\n        [goTo, path, toggleOpen],\n    );\n\n    const sortValue = useMemo(() => {\n        return sortByOptions.find(({ value }) => value === sortValueId)?.label;\n    }, [sortValueId]);\n\n    useOutsideClickListener(currRef, isMobile ? undefined : () => toggleOpen(true));\n\n    useEffect(() => {\n        dispatch(setSort(state?.sortBy));\n    }, [dispatch, state]);\n\n    return {\n        setActiveSort,\n        open,\n        toggleOpen,\n        currRef,\n        t,\n        sortValue,\n        sortValueId,\n    };\n};\n","import { AxiosResponse } from 'axios';\nimport { ApiService } from '.';\nimport { sortByOptions } from '../constants/sortByOptions';\nimport { IMainPageData } from '../dto/mainPageDto';\nimport { getAcceptLanguageHeaders } from './utils';\n\ninterface Params {\n    start?: number;\n    sortBy?: number;\n    searchText?: string;\n    currency: number;\n    category?: number;\n    commonFilters?: { [key: string]: string };\n}\n\nconst getMainPageItems = async (params?: Params): Promise<AxiosResponse<IMainPageData>> => {\n    const { start, sortBy, searchText, currency, category, commonFilters } = params ?? {};\n    const extraHeaders = getAcceptLanguageHeaders();\n\n    let inputParams: any = {};\n\n    if (start) {\n        inputParams['start'] = start;\n    }\n\n    if (sortBy) {\n        const { orderType, orderItem } = sortByOptions.find(({ value }) => value === sortBy)!;\n        inputParams['order_type'] = orderType;\n        inputParams['order_item'] = orderItem;\n    }\n\n    if (searchText) {\n        inputParams['search_text'] = searchText;\n    }\n\n    if (category) {\n        inputParams['category'] = category;\n    }\n\n    if (commonFilters) {\n        inputParams = { ...inputParams, ...commonFilters };\n    }\n\n    const url = Object.keys(inputParams).length === 0 ? 'view/recent_item_listings' : 'view/search_item_listings';\n    const method = Object.keys(inputParams).length === 0 ? 'GET' : 'POST';\n\n    inputParams['currency'] = currency;\n\n    return ApiService<IMainPageData>({ method, url, inputParams, extraHeaders });\n};\n\nexport { getMainPageItems };\n","import { FC } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Breadcrumbs } from '../../components/breadcrumbs';\nimport { CategoryFilters } from '../../components/category-filters';\nimport { ChangeListGridView } from '../../components/change-list-grid-view';\nimport { GridItems } from '../../components/grid-items';\nimport { ListItems } from '../../components/list-items';\nimport { Sidebar } from '../../components/sidebar';\nimport { SortBy } from '../../components/sort-by';\n\nimport './Home.css';\nimport { useHome } from './useHome';\n\nconst Home: FC = () => {\n    const { items = [], totalCount, t, getNextItems, activeView, isMobile, homeClassName } = useHome();\n    return (\n        <div className={`home ${isMobile ? '' : 'home-desktop'}`}>\n            <Sidebar />\n\n            <div className={homeClassName}>\n                <div className=\"home__breadcrumbs\">\n                    <Breadcrumbs />\n                </div>\n                <div className=\"home__header\">\n                    <span className=\"home__total-count\">\n                        {totalCount} {t('lblResultsFound')}\n                    </span>\n                    <div className=\"home__actions\">\n                        <CategoryFilters />\n                        <SortBy />\n                        {!isMobile && <ChangeListGridView />}\n                    </div>\n                </div>\n                {items.length !== 0 && (\n                    <InfiniteScroll\n                        dataLength={items.length}\n                        next={getNextItems}\n                        hasMore={items.length < totalCount}\n                        loader={<h4>Loading...</h4>}\n                    >\n                        {activeView === 'grid' || isMobile ? <GridItems items={items} /> : <ListItems items={items} />}\n                    </InfiniteScroll>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getMainPageItems } from '../../api/mainPageItems';\nimport { useIsMobile } from '../../context/useIsMobile';\nimport { IMainPageItem } from '../../dto/mainPageDto';\nimport { useAppSelector } from '../../redux/hooks';\nimport { useAppHistory } from '../../utils/useAppHistory';\n\nexport const useHome = () => {\n    const { t } = useTranslation();\n    const isMobile = useIsMobile();\n    const { state } = useAppHistory();\n    const searchText = useAppSelector((state) => state.mainPageFilter.searchText);\n    const sidebar = useAppSelector((state) => state.sidebar);\n    const sortBy = useAppSelector((state) => state.homeView.sortValue);\n    const activeView = useAppSelector((state) => state.homeView.active);\n    const currency = useAppSelector((state) => state.currencies.active);\n    const [start, setStart] = useState<number | undefined>(undefined);\n    const [items, setItems] = useState<IMainPageItem[]>([]);\n    const [totalCount, setTotalCount] = useState<number>(0);\n\n    const category = useMemo(() => {\n        if (!state) {\n            return null;\n        }\n        const sidebarFilters = state.sidebarFilters;\n        if (!sidebarFilters || sidebarFilters.length === 0) {\n            return null;\n        }\n\n        return sidebarFilters[sidebarFilters.length - 1];\n    }, [state]);\n\n    const commonFilters = useMemo(() => {\n        if (Object.keys(state?.commonFilters ?? {}).length === 0) {\n            return null;\n        }\n        const {\n            listing_type,\n            price_from,\n            price_to,\n            include_items_without_price,\n            country,\n            place,\n            owner_type,\n            include_items_with_media,\n        } = state.commonFilters;\n        const cf: any = {};\n        if (!!listing_type && listing_type.length !== 0) {\n            cf['listing_type'] = listing_type.join('%7C');\n        }\n        if (!!price_from) {\n            cf['price_from'] = price_from;\n        }\n        if (!!price_to) {\n            cf['price_to'] = price_to;\n        }\n        if (include_items_without_price !== 1) {\n            cf['include_items_without_price'] = include_items_without_price === 0;\n        }\n        if (!!country && country.length !== 0) {\n            cf['country'] = country.join('%7C');\n        }\n        if (!!place) {\n            cf['place'] = place;\n        }\n        if (owner_type !== undefined) {\n            cf['owner_type'] = owner_type === 0 ? 0 : 1;\n        }\n        if (include_items_with_media) {\n            cf['include_items_with_media'] = include_items_with_media;\n        }\n\n        return cf;\n    }, [state?.commonFilters]);\n\n    const getNextItems = useCallback(async () => {\n        try {\n            const response = await getMainPageItems({ sortBy, start, currency, category, commonFilters });\n            const elems = response.data.items;\n            setItems(items.concat(elems));\n            setStart(start ?? 0 + 10);\n        } catch (err) {\n            console.error(err);\n        }\n    }, [category, commonFilters, currency, items, sortBy, start]);\n\n    useEffect(() => {\n        const getItems = async () => {\n            try {\n                const response = await getMainPageItems({ sortBy, searchText, currency, category, commonFilters });\n                const elems = response.data.items;\n                const total = response.data.total_count;\n                setItems(elems);\n                setTotalCount(total);\n                setStart(undefined);\n            } catch (err) {\n                console.error(err);\n            }\n        };\n        getItems();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sortBy, searchText, currency, category, commonFilters]);\n\n    const homeClassName = useMemo(() => {\n        if (isMobile) {\n            return 'home__content';\n        }\n        if (sidebar?.docked || sidebar?.open) {\n            return 'home__content home__content-docked';\n        }\n        return 'home__content home__content-undocked';\n    }, [isMobile, sidebar?.docked, sidebar?.open]);\n\n    return {\n        homeClassName,\n        items,\n        totalCount,\n        t,\n        getNextItems,\n        start,\n        activeView,\n        isMobile,\n    };\n};\n"],"sourceRoot":""}